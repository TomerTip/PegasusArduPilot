Search.setIndex({"docnames": ["index", "source/api/backends.backend", "source/api/backends.mavlink_backend", "source/api/backends.ros2_backend", "source/api/dynamics.drag", "source/api/dynamics.linear_drag", "source/api/graphical_sensors.graphical_sensor", "source/api/graphical_sensors.lidar", "source/api/graphical_sensors.monocular_camera", "source/api/graphs.graph", "source/api/graphs.ros2_camera_graph", "source/api/index", "source/api/params", "source/api/pegasus_interface", "source/api/people", "source/api/sensors.barometer", "source/api/sensors.gps", "source/api/sensors.imu", "source/api/sensors.magnetometer", "source/api/sensors.sensor", "source/api/state", "source/api/thrusters.quadratic_thrust_curve", "source/api/vehicles.multirotor", "source/api/vehicles.vehicle", "source/api/vehicles.vehicle_manager", "source/features/environments", "source/features/px4_integration", "source/features/vehicles", "source/references/bibliography", "source/references/changelog", "source/references/contributing", "source/references/known_issues", "source/references/license", "source/references/roadmap", "source/setup/developer", "source/setup/installation", "source/tutorials/create_custom_backend", "source/tutorials/create_simulation_with_people", "source/tutorials/create_standalone_application", "source/tutorials/create_standalone_simulation", "source/tutorials/run_extension_mode"], "filenames": ["index.rst", "source/api/backends.backend.rst", "source/api/backends.mavlink_backend.rst", "source/api/backends.ros2_backend.rst", "source/api/dynamics.drag.rst", "source/api/dynamics.linear_drag.rst", "source/api/graphical_sensors.graphical_sensor.rst", "source/api/graphical_sensors.lidar.rst", "source/api/graphical_sensors.monocular_camera.rst", "source/api/graphs.graph.rst", "source/api/graphs.ros2_camera_graph.rst", "source/api/index.rst", "source/api/params.rst", "source/api/pegasus_interface.rst", "source/api/people.rst", "source/api/sensors.barometer.rst", "source/api/sensors.gps.rst", "source/api/sensors.imu.rst", "source/api/sensors.magnetometer.rst", "source/api/sensors.sensor.rst", "source/api/state.rst", "source/api/thrusters.quadratic_thrust_curve.rst", "source/api/vehicles.multirotor.rst", "source/api/vehicles.vehicle.rst", "source/api/vehicles.vehicle_manager.rst", "source/features/environments.rst", "source/features/px4_integration.rst", "source/features/vehicles.rst", "source/references/bibliography.rst", "source/references/changelog.rst", "source/references/contributing.rst", "source/references/known_issues.rst", "source/references/license.rst", "source/references/roadmap.rst", "source/setup/developer.rst", "source/setup/installation.rst", "source/tutorials/create_custom_backend.rst", "source/tutorials/create_simulation_with_people.rst", "source/tutorials/create_standalone_application.rst", "source/tutorials/create_standalone_simulation.rst", "source/tutorials/run_extension_mode.rst"], "titles": ["Pegasus Simulator", "Backend", "Mavlink Backend", "ROS2 Backend", "Drag", "Linear Drag", "Graphical Sensor", "Lidar", "Monocular Camera", "Graph", "ROS2 Camera Graph", "API Reference", "Params", "Pegasus Interface", "People", "Barometer", "GPS", "Imu", "Magnetometer", "Sensor", "State", "Quadratic Thrust Curve", "Multirotor", "Vehicle", "Vehicle Manager", "Environments", "PX4 Integration", "Vehicles", "Bibliography", "Changelog", "Contributing", "Known Issues", "License", "Roadmap", "Development", "Installation", "Create a Custom Controller", "Simulation with Moving People", "Create a Standalone Application", "Your First Simulation", "Run in Extension Mode (GUI)"], "terms": {"i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "built": [0, 26, 32, 35, 36, 38], "top": [0, 32, 34, 35, 38, 40], "nvidia": [0, 7, 8, 13, 23, 32, 33, 34, 36, 37, 38, 39], "omnivers": [0, 7, 8, 23, 32, 34, 35, 38, 40], "isaac": [0, 7, 8, 10, 13, 14, 20, 23, 25, 31, 32, 34, 36, 37, 38, 39], "sim": [0, 8, 10, 14, 20, 23, 25, 31, 32, 34, 36, 37, 38, 39], "It": [0, 2, 5, 13, 22, 27, 30, 36, 38], "design": [0, 28], "provid": [0, 1, 6, 8, 13, 15, 16, 17, 18, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40], "an": [0, 2, 13, 14, 17, 20, 23, 24, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 40], "easi": [0, 30], "yet": [0, 13, 30, 31, 33, 38, 40], "power": [0, 29, 36], "wai": [0, 32, 34, 35, 36], "dynam": [0, 4, 5, 21, 27, 30, 36, 37], "multirotor": [0, 11, 26, 27, 29, 36, 37, 39], "vehicl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 30, 33, 35, 36, 37, 39, 40], "interfac": [0, 1, 2, 3, 4, 11, 14, 22, 25, 26, 31, 33, 36, 37, 39, 40], "px4": [0, 1, 2, 13, 15, 16, 17, 18, 20, 28, 29, 31, 32, 33, 36, 37, 39], "integr": [0, 33], "well": [0, 19, 27, 30, 35, 36, 37, 38], "custom": [0, 14, 25, 26, 27, 35], "python": [0, 13, 14, 24, 25, 26, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40], "At": [0, 25, 31, 35], "moment": [0, 21, 25, 27, 31], "onli": [0, 2, 3, 8, 10, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 31, 35, 36, 37, 38, 39], "ar": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 21, 24, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39], "support": [0, 10, 21, 26, 29, 30, 31, 33, 34, 35], "topologi": [0, 27], "plan": [0, 27, 28, 36], "futur": [0, 2, 22, 25, 26, 27, 30, 35], "version": [0, 2, 25, 27, 29, 35, 38, 39], "If": [0, 6, 13, 19, 25, 26, 29, 30, 33, 35, 36, 37, 38, 39], "you": [0, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "find": [0, 30], "us": [0, 1, 2, 3, 4, 5, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40], "your": [0, 25, 26, 27, 30, 35, 36, 37, 38, 40], "academ": [0, 28], "work": [0, 22, 28, 29, 30, 35, 38, 40], "pleas": [0, 27, 29, 30, 33, 34, 35, 39], "cite": 0, "paper": [0, 29, 30, 36], "below": 0, "also": [0, 2, 7, 14, 23, 27, 29, 34, 35, 36, 37, 39, 40], "avail": [0, 7, 14, 31, 32, 35, 37, 40], "here": [0, 2, 6, 19, 30, 35, 36, 37, 38, 39, 40], "inproceed": 0, "10556959": 0, "author": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 36, 38, 39], "jacinto": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 37, 38, 39], "marcelo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 37, 38, 39], "pinto": [0, 28, 30, 36], "jo\u00e3o": [0, 30], "patrikar": 0, "jai": 0, "keller": 0, "john": [0, 28], "cunha": [0, 28, 36], "rita": [0, 28], "scherer": 0, "sebastian": 0, "pascoal": 0, "ant\u00f3nio": 0, "booktitl": 0, "2024": [0, 3, 6, 7, 8, 14, 22, 23, 37], "intern": [0, 13, 15, 28, 36, 39], "confer": [0, 28, 36], "unman": [0, 28, 36], "aircraft": [0, 28, 36], "system": [0, 16, 28, 30, 36, 38, 39], "icua": [0, 28, 36], "titl": 0, "multipl": [0, 27, 28], "aerial": 0, "year": [0, 30], "volum": [0, 28], "number": [0, 22, 35, 36], "page": [0, 28, 34, 36], "917": 0, "922": 0, "keyword": 0, "robot": [0, 23, 27, 28, 30, 36, 37, 38, 39], "sens": 0, "real": 0, "time": [0, 1, 2, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 30, 35, 36, 38, 39], "sensor": [0, 1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 23, 27, 29, 33, 36, 39], "task": [0, 30], "analysi": 0, "doi": [0, 28, 36], "10": [0, 16, 28, 36, 37], "1109": [0, 28, 36], "icuas60882": 0, "08": 0, "02": 0, "v4": 0, "1": [0, 6, 8, 14, 15, 16, 17, 19, 21, 22, 23, 28, 35], "0": [0, 2, 5, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 35], "releas": [0, 35], "4": [0, 2, 3, 14, 16, 17, 21, 26, 30, 35, 36, 37], "thi": [0, 1, 2, 3, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "NOT": [0, 32, 36, 38], "compat": [0, 2, 16], "older": [0, 35], "In": [0, 16, 22, 25, 26, 27, 28, 30, 33, 35, 36, 37, 38, 39, 40], "parallel": 0, "gnc": 0, "serv": [0, 4, 30, 36, 37, 38, 39], "foundat": 0, "code": [0, 25, 27, 32, 35], "perform": [0, 6, 7, 8, 13, 15, 16, 17, 18, 19, 30, 36, 37, 38, 39, 40], "world": [0, 13, 14, 16, 18, 19, 23, 24, 25, 27, 30, 33, 35, 36, 37, 38, 39], "experi": [0, 34], "my": [0, 30, 37], "ph": [0, 30, 37], "d": [0, 18, 28, 30, 36, 37], "more": [0, 27, 29, 36, 37, 38, 39], "inform": [0, 1, 3, 14, 19, 26, 27, 29, 30, 36], "can": [0, 1, 2, 3, 6, 8, 10, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40], "found": [0, 30, 32, 35, 36], "link": [0, 30, 34, 35], "open": [0, 2, 28, 30, 32, 35, 36, 37, 38, 39, 40], "effort": [0, 30], "me": [0, 30], "januari": [0, 30], "2023": [0, 1, 2, 4, 5, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 28, 30, 32, 36, 38, 39], "tool": [0, 26, 29, 30, 34], "wa": [0, 2, 6, 13, 19, 30, 31, 35, 36, 39], "creat": [0, 10, 13, 14, 22, 24, 26, 27, 30, 32, 34, 35, 37, 39, 40], "origin": [0, 1, 3, 6, 13, 14, 15, 18, 19, 25, 30, 32, 35, 37, 39], "purpos": [0, 2, 22, 27, 30, 32, 36, 39], "workplan": [0, 30], "next": [0, 30, 35, 36, 37, 39, 40], "which": [0, 1, 2, 6, 14, 17, 19, 21, 22, 23, 25, 26, 30, 32, 35, 36, 37, 39], "mean": [0, 14, 24, 30, 35, 39, 40], "expect": [0, 25, 26, 30, 35], "repositori": [0, 30, 34, 35], "mantain": [0, 30], "hopefulli": [0, 30], "least": [0, 1], "until": [0, 30, 35], "2027": [0, 30], "founder": 0, "under": [0, 1, 6, 8, 30, 32, 35, 39], "supervis": 0, "prof": 0, "antonio": [0, 28], "ist": 0, "isr": [0, 30], "lisbon": [0, 25], "architectur": 0, "exampl": [0, 1, 2, 3, 6, 8, 10, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39], "applic": [0, 25, 34, 35, 36, 37, 39, 40], "instal": [0, 13, 26, 29, 30, 34, 39, 40], "configur": [0, 2, 3, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 26, 27, 36, 37, 38, 39], "environ": [0, 13, 29, 30, 36, 37, 38, 39], "variabl": [0, 14, 21, 36, 37, 38, 39], "autopilot": [0, 13, 26, 29, 33, 36, 37, 39], "structur": [0, 1, 6, 8, 30, 36, 38], "run": [0, 13, 14, 24, 25, 26, 30, 34, 36, 37, 38, 39], "extens": [0, 13, 14, 24, 25, 26, 29, 31, 34, 36, 37, 38, 39], "mode": [0, 2, 13, 25, 26, 29, 31, 34, 35, 39], "gui": [0, 25, 26, 29, 31, 34, 35, 38, 39], "standalon": [0, 25, 29, 34, 35, 36, 37, 39, 40], "first": [0, 2, 27, 35, 36, 37, 38, 40], "move": [0, 14, 40], "peopl": [0, 30], "list": [0, 1, 2, 3, 4, 5, 13, 14, 21, 22, 23, 24, 27, 32, 36, 37, 39], "set": [0, 13, 14, 22, 26, 27, 29, 34, 36, 37, 38, 39], "map": [0, 28, 36, 40], "global": [0, 3, 10, 13, 16], "coordin": [0, 13, 14, 16, 19, 39], "graphic": [0, 1, 3, 30], "graph": [0, 23, 33, 37], "thruster": [0, 2, 21, 27, 29], "backend": [0, 6, 8, 14, 23, 26, 27, 33, 36, 37, 39], "interac": 0, "default": [0, 1, 2, 3, 6, 8, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 30, 35, 36, 38, 39], "param": [0, 2, 23, 25, 26, 27, 34, 36, 37, 39], "contribut": [0, 27, 29, 33, 34], "known": [0, 39], "issu": 0, "changelog": 0, "roadmap": [0, 25, 27, 30], "licens": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 36, 37, 38, 39], "bibliographi": 0, "section": [0, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40], "we": [0, 1, 2, 6, 8, 13, 18, 19, 22, 23, 25, 26, 27, 30, 34, 35, 36, 37, 38, 39, 40], "acknowledg": 0, "nobel": 0, "those": [0, 36], "who": 0, "came": 0, "befor": [0, 13, 38, 39, 40], "u": [0, 20, 28, 30, 36, 38], "inspir": 0, "kh04": [0, 28], "gazebo": [0, 2, 15, 28, 32, 35], "fbas16": [0, 28], "rotor": [0, 1, 2, 3, 21, 22, 27, 28, 36, 39], "plugin": [0, 40], "mhp15": [0, 18, 28], "sitl": [0, 18, 26, 29, 32, 35, 39], "sdlk18": [0, 28], "microsoft": 0, "airsim": [0, 28], "unreal": 0, "engin": [0, 23, 30, 39], "snk": [0, 28], "21": [0, 28], "flightmar": [0, 28], "uniti": 0, "bab13": [0, 28], "jmavsim": [0, 28], "java": 0, "have": [0, 1, 2, 3, 6, 8, 10, 13, 15, 16, 17, 18, 21, 23, 26, 27, 30, 34, 35, 36, 37, 38, 39, 40], "seen": 0, "further": [0, 30], "than": [0, 6, 19, 36, 37], "stand": 0, "upon": [0, 30], "shoulder": 0, "giant": 0, "sir": 0, "newton": [0, 4, 5, 21], "ocean": [0, 30], "dsor": [0, 30], "group": [0, 22, 30], "institut": [0, 30], "research": [0, 30, 37], "unit": [0, 30], "laboratori": [0, 30], "larsi": [0, 30], "instituto": [0, 25, 30], "superior": [0, 25, 30], "t\u00e9cnico": [0, 25, 30], "universidad": [0, 30], "de": [0, 30], "lisboa": [0, 30], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39], "grant": [0, 30], "fund": [0, 30], "funda\u00e7\u00e3o": [0, 30], "para": [0, 30], "ci\u00eancia": [0, 30], "e": [0, 1, 7, 8, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 30, 35, 36, 37, 38, 39, 40], "tecnologia": [0, 30], "fct": [0, 30], "file": [1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 35, 36, 37, 38, 39], "py": [1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 34, 35, 36, 37, 38, 39], "tecnico": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 38, 39], "ulisboa": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 38, 39], "pt": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 38, 39], "descript": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 30, 32, 36, 37, 38, 39], "bsd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 37, 38, 39], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 32, 35], "claus": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 37, 38, 39], "copyright": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 36, 37, 38, 39], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 32, 35, 36, 37, 38, 39], "all": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 32, 35, 36, 37, 38, 39], "right": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 35, 36, 37, 38, 39, 40], "reserv": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 36, 37, 38, 39], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 36, 37, 38, 39], "pegasu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40], "simul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38], "logic": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 36, 37, 38, 39], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 36, 38], "object": [1, 2, 4, 6, 8, 9, 13, 14, 19, 20, 22, 23, 24, 27, 36, 37, 38, 39], "defin": [1, 6, 12, 13, 19, 20, 22, 27, 34, 36, 37, 38, 39], "templat": [1, 4, 36, 37, 38, 39], "commun": [1, 2, 3, 14, 29, 30, 36], "control": [1, 2, 3, 6, 8, 14, 20, 23, 26, 27, 28, 29, 37, 38, 39, 40], "everi": [1, 2, 3, 6, 8, 14, 22, 23, 24, 30, 35, 36, 38], "one": [1, 10, 13, 14, 15, 24, 25, 31, 36, 37, 38, 39], "same": [1, 14, 18, 24, 25, 30, 35, 36, 37], "timestep": 1, "method": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39], "update_st": [1, 2, 3, 6, 8, 14, 23, 36], "update_sensor": [1, 2, 3, 6, 8, 23, 36], "call": [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 21, 22, 23, 34, 36, 37, 38], "updat": [1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 29, 30, 35, 36, 37, 38, 39], "data": [1, 2, 3, 6, 7, 8, 15, 16, 17, 18, 19, 22, 23, 26, 27, 32, 34, 36, 38, 39], "produc": [1, 2, 6, 7, 8, 15, 16, 17, 18, 19, 27, 36], "step": [1, 2, 3, 6, 8, 14, 22, 23, 30, 34, 35, 36, 37, 38, 39], "receiv": [1, 2, 3, 4, 5, 14, 21, 27, 36, 39], "teh": 1, "current": [1, 2, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 30, 34, 36, 38, 39], "state": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 21, 23, 27, 36, 38, 39], "its": [1, 2, 3, 6, 8, 13, 14, 19, 21, 23, 24, 29, 30, 32, 35, 36, 38], "addition": [1, 14, 24, 27, 39], "must": [1, 22, 23, 26, 27, 30, 32, 35, 36, 37, 38, 39], "name": [1, 2, 6, 9, 10, 13, 14, 19, 22, 23, 24, 25, 27, 32, 36, 39], "input_refer": [1, 2, 3, 21, 36], "know": [1, 26, 30, 37], "desir": [1, 2, 22, 36], "angular": [1, 2, 3, 14, 17, 20, 21, 22, 23, 36, 39], "veloc": [1, 2, 3, 5, 14, 17, 20, 21, 22, 23, 36, 39], "appli": [1, 2, 3, 4, 5, 21, 22, 23, 36], "physic": [1, 2, 3, 6, 8, 13, 14, 22, 23, 27, 28, 36, 37, 38, 39], "implement": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 39], "some": [1, 2, 3, 6, 8, 10, 14, 15, 16, 17, 18, 19, 21, 30, 33, 35, 36, 38, 39], "send": [1, 2, 23, 26, 27, 30, 36, 37, 39], "anoth": [1, 13], "through": [1, 2, 3, 23, 26], "mavlink": [1, 11, 23, 26, 27, 29, 31, 33, 36, 39], "ros2": [1, 11, 23, 37], "start": [1, 2, 3, 6, 7, 8, 10, 14, 19, 22, 23, 25, 26, 30, 35, 36, 37, 38, 39], "stop": [1, 2, 3, 6, 8, 13, 14, 19, 22, 23, 36, 37, 38, 39], "reset": [1, 2, 3, 6, 13, 14, 19, 36, 37, 38, 39], "callback": [1, 2, 3, 6, 8, 14, 22, 23, 36, 37, 38, 39], "get": [1, 2, 14, 19, 22, 23, 24, 26, 36, 38, 40], "when": [1, 2, 3, 6, 7, 8, 10, 13, 14, 19, 22, 23, 25, 26, 29, 30, 31, 34, 35, 36, 38, 39], "stope": [1, 14, 23], "impli": [1, 32], "attribut": [1, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 36], "__init__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 34, 36, 37, 38, 39], "initi": [1, 2, 3, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 29, 35, 36, 37, 38, 39], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 32, 35, 36, 37, 38, 39, 40], "invok": [1, 2, 6, 8, 13, 14, 23, 24, 36, 38, 39], "give": [1, 6, 8, 14, 30, 36], "access": [1, 6, 8, 14, 28, 34, 36], "entir": [1, 6, 8, 14, 30], "even": [1, 6, 8, 32, 38], "though": [1, 6, 8], "latest": [1, 3, 6, 7, 8, 23, 30, 35, 36], "full": [1, 6, 8, 16, 25], "mai": [1, 6, 8, 32, 35, 38, 39], "prove": [1, 6, 8], "useful": [1, 6, 8, 27, 30, 35, 36], "circumst": [1, 6, 8], "nice": [1, 6, 8, 37], "user": [1, 6, 8, 13, 34, 35, 36, 37, 40], "possibl": [1, 6, 8, 25, 30, 32, 35], "overid": [1, 6, 8], "behaviour": [1, 6, 8, 14, 37], "via": [1, 2, 6, 8, 14, 24, 26, 29, 34, 39], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 36, 38], "refer": [1, 4, 5, 6, 8, 14, 15, 19, 35, 36, 37, 39], "associ": [1, 6, 8, 14, 19, 24], "should": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 27, 30, 35, 36, 37, 38, 39, 40], "return": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 36], "handl": [1, 2, 3, 6, 7, 8, 14, 19], "begin": [1, 2, 3, 6, 7, 8, 14, 19], "dt": [1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 36, 37, 38], "being": [1, 2, 3, 14, 21, 22, 23, 24, 30, 36, 37, 38, 39], "sent": [1, 2, 3, 14, 23], "from": [1, 3, 13, 14, 16, 18, 23, 24, 25, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 40], "float": [1, 2, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 36, 37, 38], "elaps": [1, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 36], "between": [1, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 36, 38], "previou": [1, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 36, 38], "function": [1, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 31, 34, 36, 37, 38, 39], "": [1, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40], "update_graphical_sensor": [1, 3, 23], "sensor_typ": [1, 2, 3, 6, 19, 36], "str": [1, 2, 3, 6, 9, 10, 13, 14, 19, 22, 23, 24, 36, 38], "describ": [1, 2, 6, 9, 13, 17, 19, 20, 21, 22, 23, 29, 36], "type": [1, 2, 4, 5, 6, 9, 10, 13, 14, 19, 20, 21, 22, 23, 24, 36], "monocularcamera": [1, 8, 11, 37], "dict": [1, 2, 3, 6, 7, 8, 10, 15, 16, 17, 18, 19, 21, 36], "dictionari": [1, 2, 3, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 21, 25, 27, 36, 38, 39], "contain": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 21, 23, 26, 34, 36, 39], "properti": [1, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24], "mavlink_backend": [2, 26, 37, 39], "mavlinkbackend": [2, 11, 23, 26, 27, 36, 37, 39], "order": [2, 16, 23, 35, 36, 38, 39], "command": [2, 27, 30, 35, 36, 40], "each": [2, 3, 6, 19, 21, 22, 23, 27, 30, 36], "__del__": [2, 13, 14, 23, 24], "destroi": [2, 13, 23], "happen": [2, 23], "make": [2, 13, 14, 26, 30, 35, 36, 37, 38, 39, 40], "sure": [2, 25, 30, 35, 37, 38, 39, 40], "close": [2, 36, 37, 38, 39], "ani": [2, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 21, 24, 29, 30, 32, 36, 37, 38, 39], "connect": 2, "config": [2, 3, 7, 8, 10, 15, 16, 17, 18, 21, 22, 27, 34, 35, 36, 37, 39], "mavlinkbackendconfig": [2, 11, 26, 37, 39], "handle_control": 2, "time_usec": 2, "flag": [2, 35], "messag": 2, "comput": [2, 5, 6, 18, 19, 22, 23, 36], "forc": [2, 4, 5, 21, 22, 23, 36], "int": [2, 21, 22, 36], "total": [2, 5, 21, 22, 36], "sinc": [2, 14, 24, 31, 36], "ignor": [2, 36], "argument": [2, 35, 36, 38], "thrust_control": 2, "poll_mavlink_messag": 2, "check": [2, 6, 7, 8, 19, 27, 29, 30, 33, 35, 36, 37, 38, 39, 40], "new": [2, 6, 13, 14, 19, 23, 24, 27, 30, 35, 36, 37, 40], "were": [2, 14, 24, 35], "re_initialize_interfac": 2, "auxiliar": [2, 22, 36, 37, 38, 39], "mavlinkinterfac": 2, "For": [2, 13, 22, 23, 27, 30, 31, 34, 35, 36, 37, 38, 39], "now": [2, 13, 22, 25, 36, 37, 38, 39, 40], "doe": [2, 26, 36], "noth": [2, 36], "send_gps_msg": 2, "gp": [2, 3, 11, 19, 27, 29, 33, 36, 39], "protocol": [2, 36], "send_ground_truth": 2, "groundtruth": 2, "send_heartbeat": 2, "mav_typ": 2, "pymavlink": 2, "mavutil": 2, "mav_type_gener": 2, "publish": [2, 3, 10, 28], "heartbear": 2, "id": [2, 10, 22, 27], "indic": 2, "send_sensor_msg": 2, "send_vision_msg": 2, "vision": 2, "mocap": 2, "try": [2, 36, 37, 39], "attemp": 2, "launch": [2, 26, 29, 34, 35, 36, 37, 38, 39, 40], "background": [2, 39], "process": [2, 17, 35], "option": [2, 22, 33, 35, 36], "specifi": [2, 6, 13, 19, 23, 26, 36, 37, 39], "kill": [2, 26], "auto": [2, 26, 35], "input": [2, 4, 5, 6, 19, 21, 36, 37], "update_bar_data": 2, "baromet": [2, 11, 27, 29, 39], "update_gps_data": [2, 3], "update_imu_data": [2, 3], "imu": [2, 3, 11, 23, 27, 28, 29, 33, 36, 39], "update_mag_data": [2, 3], "iter": [2, 36, 38], "magnetomet": [2, 3, 11, 27, 29, 33, 39], "store": [2, 20, 25, 39], "other": [2, 20, 21, 27, 30, 32, 34, 36, 38], "pass": [2, 27, 36, 38], "discard": 2, "update_vision_data": 2, "todo": [2, 13], "wait_for_first_hearbeat": 2, "respons": [2, 37, 38], "wait": 2, "hearbeat": 2, "lock": 2, "heartbeat": 2, "poll": 2, "auxiliari": [2, 27, 36, 37, 39], "empti": [2, 3, 8, 10, 13, 15, 16, 17, 18, 21, 38], "vehicle_id": [2, 3, 22, 26, 27, 37, 39], "connection_typ": [2, 26], "tcpin": [2, 26], "connection_ip": [2, 26], "localhost": [2, 26], "connection_baseport": [2, 26], "4560": [2, 26], "px4_autolaunch": [2, 26, 37, 39], "true": [2, 3, 8, 10, 13, 14, 26, 27, 36, 37, 38, 39], "px4_dir": [2, 26, 35, 37, 39], "pegasusinterfac": [2, 11, 13, 25, 26, 36, 37, 39], "px4_path": [2, 13, 26, 39], "px4_vehicle_model": [2, 26, 39], "classic_iri": 2, "enable_lockstep": [2, 26], "num_rotor": [2, 3, 21, 26], "input_offset": [2, 26], "input_sc": [2, 26], "1000": [2, 26], "zero_position_arm": [2, 26], "100": [2, 26], "update_r": [2, 6, 15, 16, 17, 18, 19, 26, 37], "250": [2, 15, 18, 26, 39], "ros2_backend": [3, 37], "topic": [3, 10, 23, 37], "ros2backend": [3, 11, 23, 37], "camera": [3, 6, 11, 13, 23, 33, 37], "camera_prim_path": [3, 10], "path": [3, 9, 10, 13, 23, 25, 26, 27, 34, 36, 39], "prim": [3, 10, 23], "els": [3, 10, 36], "local": [3, 10, 16, 23, 26, 35], "ros2camera": 3, "namespac": [3, 10, 36, 37, 39], "drone": [3, 29, 36, 37, 39, 40], "append": [3, 36], "pub_pos": 3, "pose": 3, "pub_twist": 3, "twist": 3, "pub_twist_inerti": 3, "inerti": [3, 5, 13, 14, 20, 22, 23, 27, 36], "frame": [3, 4, 5, 10, 13, 14, 17, 20, 21, 22, 23, 27, 29, 36, 38], "pub_accel": 3, "acceler": [3, 14, 17, 20, 23, 36], "pub_imu": 3, "pub_mag": 3, "pub_gp": 3, "pub_gps_vel": 3, "pose_top": 3, "posit": [3, 8, 13, 14, 16, 20, 22, 23, 36, 37, 39], "attitud": [3, 20, 36], "enu": [3, 13, 14, 20, 22, 23, 29, 36, 39], "twist_top": 3, "linear": [3, 4, 11, 14, 20, 21, 23, 29, 36, 39], "bodi": [3, 4, 5, 17, 20, 21, 22, 23, 27, 36], "twist_inertial_top": 3, "twist_inerti": 3, "accel_top": 3, "accel": 3, "imu_top": 3, "mag_top": 3, "mag": 3, "gps_topic": 3, "gps_vel_top": 3, "gps_twist": 3, "pub_graphical_sensor": [3, 37], "pub_sensor": [3, 37], "pub_stat": [3, 37], "pub_tf": [3, 37], "fals": [3, 13, 14, 26, 36, 37, 38, 39], "tf": [3, 10], "sub_control": [3, 37], "subscrib": 3, "add_lidar_writt": 3, "add_monocular_camera_writt": 3, "initialize_publish": 3, "initialize_subscrib": 3, "target": [3, 13, 14, 21, 22, 36, 37, 39, 40], "individu": [3, 28, 32, 36], "rotor_callback": 3, "ros_msg": 3, "rotor_id": 3, "send_static_transform": 3, "update_lidar_data": 3, "update_monocular_camera_data": 3, "receivel": 3, "actuat": [4, 5, 33], "rigidbodi": [4, 5, 20, 23], "rigid": [4, 5, 36], "coeffici": [4, 5], "3x1": [4, 5, 36], "vector": [4, 5, 22, 23], "constant": [4, 5], "len": [4, 5], "accord": [4, 5, 16, 20, 23, 34, 39], "flu": [4, 5, 20, 23, 29, 36], "express": [4, 5, 20, 32, 36], "n": [4, 5, 21, 22, 28], "dx": [4, 5], "dy": [4, 5], "dz": [4, 5], "linear_drag": 5, "affect": 5, "lineardrag": [5, 11, 27], "afftect": 5, "inherit": [5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 22, 23, 36, 37, 38, 39], "drag_coeffici": 5, "diag": [5, 36], "given": [5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 36, 37], "convent": [5, 14, 20, 22, 23, 27, 29, 36, 39], "r": [5, 20, 30, 36], "v": [5, 20, 35, 36], "where": [5, 6, 7, 8, 13, 15, 16, 17, 18, 19, 21, 26, 27, 35, 36, 37, 38, 39], "velocity_body_fram": 5, "definit": [6, 13, 14, 19, 22, 23, 24, 36], "graphical_sensor": [6, 7, 8, 23, 37], "graphicalsensor": [6, 7, 8, 11], "update_period": [6, 19], "period": [6, 19, 23], "rate": [6, 19, 36, 38], "refresh": [6, 19], "hz": [6, 15, 16, 17, 18, 19, 39], "config_from_dict": [6, 19], "config_dict": [6, 19], "actual": [6, 7, 8, 13, 15, 16, 17, 18, 19, 26, 27, 36, 37, 38, 39], "update_at_r": [6, 19], "decor": [6, 19], "last": [6, 19, 23, 36], "higher": [6, 19], "so": [6, 19, 23, 35, 36, 37, 38, 39], "need": [6, 19, 22, 25, 26, 29, 30, 35, 36, 37, 38, 39], "valu": [6, 19, 36], "measur": [6, 17, 18, 19, 36], "fnc": [6, 19], "want": [6, 13, 19, 25, 30, 36, 37, 38], "enforc": [6, 19, 30], "specif": [6, 19, 32, 33], "def": [6, 19, 36, 37, 38, 39], "self": [6, 19, 36, 37, 38, 39], "do": [6, 19, 22, 26, 30, 35, 36, 38, 39, 40], "none": [6, 13, 14, 19, 23, 24, 30, 35, 36, 38], "timestamp": [6, 19], "otherwis": [6, 13, 19, 32, 36, 37, 38, 39], "attach": [7, 8, 10], "lidar_nam": 7, "folder": [7, 13, 34, 35], "ext": [7, 34], "omni": [7, 13, 14, 23, 35, 36, 37, 38, 39], "lidar_config": 7, "offici": [7, 34, 37], "document": [7, 8, 27, 29, 32, 33, 34, 35, 37, 38, 39], "http": [7, 8, 15, 16, 17, 18, 23, 28, 35], "doc": [7, 8, 23, 29, 30, 34], "com": [7, 8, 15, 16, 17, 18, 23, 28, 35], "isaacsim": [7, 8, 34, 35, 36, 37, 38, 39, 40], "featur": [7, 8, 25, 26, 33, 34, 35], "sensors_simul": [7, 8], "isaac_sim_sensors_rtx_based_lidar": 7, "html": [7, 8, 23, 28, 30], "point": [7, 8, 13, 15, 16, 17, 18, 30, 35], "monocular_camera": [8, 37], "camera_nam": 8, "ofici": 8, "isaac_sim_sensors_camera": 8, "depth": [8, 10], "np": [8, 20, 22, 36, 37], "arrai": [8, 20, 36], "30": [8, 27, 28], "orient": [8, 14, 20, 22, 23, 37, 39], "resolut": [8, 10], "1920": 8, "1200": 8, "frequenc": 8, "intrins": 8, "958": 8, "8": [8, 17, 36], "957": 8, "956": 8, "7": [8, 36, 40], "589": 8, "5": [8, 14, 17, 21, 36, 37], "distortion_coeffici": 8, "14": [8, 35, 36, 39], "03": 8, "0002": 8, "00003": 8, "009": 8, "07": [8, 22, 27, 35, 36, 37, 39], "017": 8, "diagonal_fov": 8, "140": 8, "filip": 9, "stec": 9, "omnigraph": [9, 10], "graph_prim_path": 9, "graph_typ": 9, "ros2_camera": 10, "micah": 10, "nye": 10, "ros2_camera_graph": 10, "ros2cameragraph": [10, 11], "graph_evalu": 10, "execut": [10, 30, 35, 40], "push": [10, 30], "640": 10, "480": 10, "output": [10, 36], "video": [10, 35, 40], "stream": 10, "pixel": 10, "width": 10, "height": 10, "rgb": 10, "camera_info": 10, "depth_pcl": 10, "instance_segment": 10, "semantic_segment": 10, "bbox_2d_tight": 10, "bbox_2d_loos": 10, "bbox_3d": 10, "publish_label": 10, "label": 10, "tf_frame_id": 10, "camera_labels_top": 10, "camera_typ": 10, "exist": [10, 13, 38, 39], "string": [10, 13, 14, 24, 36], "camera_top": 10, "monocular": [11, 23], "lidar": 11, "drag": [11, 25, 27, 29, 39], "quadrat": [11, 22, 29, 33], "thrust": [11, 22, 27, 29, 33, 36], "curv": [11, 22, 25, 27, 29, 33, 36, 37, 39], "quadraticthrustcurv": [11, 21, 27, 39], "get_world_transform_xform": [11, 23], "manag": [11, 13, 14, 35, 40], "vehiclemanag": [11, 13, 23, 24], "multirotorconfig": [11, 22, 27, 36, 37, 39], "person": [11, 14, 37], "personcontrol": [11, 14, 37], "peoplemanag": [11, 14], "pegasus_interfac": [13, 25, 26, 36, 37, 39], "singleton": [13, 14, 24, 36, 37, 38, 39], "framework": [13, 25, 28, 29, 32, 34], "instanc": [13, 14, 24, 25, 37], "destructor": [13, 14, 24], "onc": [13, 14, 24, 36, 39], "static": [13, 14, 24, 37], "__new__": [13, 14, 24], "cl": [13, 14, 24], "alloc": [13, 14, 22, 24, 36], "memori": [13, 14, 24, 39], "singl": [13, 14, 24, 39], "vehiclemang": [13, 24], "clear_scen": 13, "clear": 13, "leav": 13, "generate_quadrotor_config_from_yaml": 13, "_summary_": [13, 21], "_description_": [13, 23], "_type_": [13, 22], "get_all_vehicl": 13, "consid": [13, 26, 27], "activ": [13, 23, 31], "instanti": [13, 26, 36, 37, 38, 39], "get_default_environ": 13, "get_vehicl": [13, 24], "stage_prefix": [13, 14, 22, 23, 24, 27], "spawn": [13, 14, 22, 23, 24, 25, 27, 29, 35, 36, 37, 38, 39], "present": [13, 14, 22, 23, 27, 33, 34], "initialize_world": 13, "load_asset": [13, 37], "usd_asset": 13, "attempt": [13, 38], "load": [13, 25, 36, 37, 38, 39, 40], "asset": [13, 25, 27, 34, 36, 37, 38, 39], "usd": [13, 14, 22, 23, 25, 27, 37, 39], "locat": [13, 26, 29, 30, 35, 40], "load_environ": [13, 25, 36, 37, 39], "usd_path": [13, 23, 25, 39], "force_clear": 13, "app": [13, 34, 35, 36, 37, 38, 39, 40], "asynchron": 13, "oper": [13, 25, 26, 34, 39], "everyth": [13, 35, 40], "sync": 13, "bool": [13, 36], "whether": [13, 32, 36, 38], "async": 13, "load_environment_async": 13, "load_nvidia_environ": 13, "environment_asset": 13, "hospit": [13, 25], "stage": [13, 14, 23, 24, 36, 37, 38, 39], "simulaton": 13, "insid": [13, 27, 34, 36, 38, 39], "set_default_global_coordin": 13, "latitud": [13, 16, 19, 25], "longitud": [13, 16, 19, 25], "altitud": [13, 15, 19, 25], "set_global_coordin": [13, 25], "degre": [13, 19, 27, 36, 37, 39], "meter": 13, "set_new_default_global_coordin": 13, "set_px4_default_airfram": 13, "airfram": [13, 35], "allow": [13, 35, 36, 38], "save": [13, 19, 25, 26, 36], "absolute_path": 13, "set_px4_path": [13, 26], "directori": [13, 26, 29, 30, 34, 35, 36, 37, 38, 39], "set_viewport_camera": [13, 37], "camera_posit": 13, "camera_target": 13, "viewport": [13, 25, 37], "x": [13, 14, 20, 36, 40], "y": [13, 14, 20, 36, 40], "z": [13, 14, 20, 21, 36], "set_world_set": 13, "physics_dt": 13, "stage_units_in_met": 13, "rendering_dt": 13, "pre": [13, 18, 25, 30, 34, 36, 37, 39], "finish": 13, "never": 13, "overrid": 13, "ones": [13, 30], "px4_default_airfram": [13, 35, 39], "setup": [13, 34, 35, 36, 37, 38, 39], "vehicle_manag": [13, 24], "core": [13, 34, 35, 36, 37, 38, 39], "character_nam": 14, "init_po": [14, 22, 23, 27, 37], "init_yaw": [14, 37], "get_character_asset_list": [14, 37], "charact": 14, "rad": [14, 21, 22, 36], "add": [14, 21, 24, 25, 33, 35, 37, 38], "movement": 14, "add_animation_graph_to_ag": 14, "get_path_for_character_prim": 14, "agent_nam": 14, "get_usd_in_fold": 14, "character_folder_path": 14, "sim_start_stop": [14, 23], "event": [14, 23, 32, 38], "timelin": [14, 23, 36, 37, 38, 39], "gener": [14, 21, 22, 23, 26, 27, 28, 29, 30, 36], "spawn_ag": 14, "usd_fil": [14, 22, 27, 39], "stage_nam": 14, "around": [14, 37], "plai": [14, 36, 37, 38, 39, 40], "anim": [14, 22, 37], "retriev": [14, 23, 36], "update_target_posit": [14, 37], "walk_spe": 14, "toward": 14, "assets_root_path": 14, "nucleu": [14, 30], "get_assets_root_path": 14, "character_root_prim_path": 14, "person_control": [14, 37], "people_manag": 14, "follow": [14, 15, 23, 24, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40], "pattern": [14, 24], "either": [14, 24, 25, 26, 30, 38, 39, 40], "keep": [14, 24, 25, 29, 37], "track": [14, 24, 36, 37], "trough": [14, 24], "ui": [14, 24, 33, 34, 36, 37, 38, 39], "script": [14, 24, 25, 26, 29, 34, 35, 36, 37, 38, 39, 40], "add_person": 14, "remov": [14, 23, 24, 30, 40], "remove_person": 14, "constructor": [14, 24, 36], "peoplemang": 14, "ad": [14, 24, 27, 30, 33, 35], "get_people_manag": 14, "get_person": 14, "prefix": [14, 24], "rebuild_nav_mesh": 14, "radiu": 14, "auto_rebake_on_chang": 14, "auto_rebake_delay_second": 14, "exclude_rigid_bodi": 14, "view_nav_mesh": 14, "dynamic_avoidance_en": 14, "navmesh_en": 14, "rebuild": 14, "navmesh": 14, "correct": [14, 35], "request": [14, 29], "remove_all_peopl": 14, "delet": [14, 24], "standard": [15, 20, 28, 30, 34, 38, 40], "atmospher": [15, 28], "isa": [15, 28], "model": [15, 18, 21, 27, 28, 29, 32, 36, 37, 39], "cav00": [15, 28], "stil_gazebo": [15, 16, 17, 18], "github": [15, 16, 17, 18, 28, 30, 35], "sitl_gazebo": [15, 16, 17, 18], "elia": [15, 18, 28], "tarasov": [15, 18], "both": [15, 34, 35, 38], "articl": 15, "brief": 15, "summari": 15, "cavcar": [15, 28], "m": [15, 16, 25, 30, 35, 36], "fisicaatmo": 15, "fcen": 15, "uba": 15, "practica": 15, "isaweb": 15, "pdf": 15, "temperature_msl": 15, "288": 15, "15": 15, "temperatur": 15, "msl": 15, "k": 15, "pressure_msl": 15, "101325": 15, "pressur": 15, "pa": 15, "lapse_r": 15, "0065": 15, "reduct": 15, "tropospher": 15, "air_density_msl": 15, "225": 15, "air": 15, "densiti": 15, "kg": [15, 36], "absolute_zero": 15, "273": 15, "drift_pa_per_sec": 15, "guarante": 16, "navig": [16, 35, 37], "project": [16, 28, 29, 36], "transform": [16, 23, 27, 36, 37, 39], "geograph": [16, 25, 39], "azymuth": 16, "equidist": [16, 28], "geodet": 16, "wgs84": 16, "mat23": [16, 28], "sny87": [16, 28], "ami": 16, "wagon": 16, "nuno": 16, "marqu": 16, "fix_typ": 16, "eph": 16, "epv": 16, "sattelites_vis": 16, "gps_xy_random_walk": 16, "2": [16, 17, 29, 33, 35], "sqrt": [16, 18], "gps_z_random_walk": 16, "gps_xy_noise_dens": 16, "0e": [16, 17], "gps_z_noise_dens": 16, "gps_vxy_noise_dens": 16, "gps_vz_noise_dens": 16, "gps_correlation_tim": 16, "60": [16, 37], "compos": [17, 27, 39], "gyroscop": [17, 33], "acceleromet": [17, 33], "respect": [17, 36], "bia": 17, "drift": 17, "slowli": 17, "vari": 17, "random": 17, "walk": [17, 37], "diffus": 17, "rn": [17, 28], "16": [17, 28], "may79": [17, 28], "noise_dens": [17, 18], "35": 17, "3600": 17, "180": 17, "pi": 17, "random_walk": [17, 18], "bias_correlation_tim": [17, 18], "0e3": 17, "turn_on_bias_sigma": 17, "300": 17, "20": 17, "9": [17, 25, 36, 37], "To": [18, 25, 26, 27, 30, 34, 35, 36, 37, 38, 39], "resort": [18, 38, 39], "declin": 18, "nclinat": 18, "angl": [18, 23, 36], "magnet": [18, 28], "strength": 18, "tabl": [18, 25, 33], "obtain": 18, "wmm": 18, "2018": [18, 28], "oc20": [18, 28], "4e": 18, "gauss": 18, "6": [18, 21, 28, 36, 37, 40], "0e2": 18, "origin_lat": 19, "might": [19, 30, 33, 36], "origin_lon": 19, "origin_alt": 19, "rel": [19, 20, 23, 30, 35], "sea": 19, "water": 19, "level": 19, "requir": [19, 30, 35, 39, 40], "knowledg": 19, "just": [19, 25, 27, 36, 37, 39, 40], "whatev": 19, "come": 19, "set_update_r": 19, "chang": [19, 25, 29, 30, 33, 35, 39], "numpi": [20, 35, 36, 37, 39], "quaternion": [20, 22, 23, 27], "qx": [20, 22, 23], "qy": [20, 22, 23], "qz": [20, 22, 23], "qw": [20, 22, 23], "encod": 20, "linear_veloc": [20, 36], "vx": 20, "vy": 20, "vz": 20, "linear_body_veloc": 20, "w": [20, 36], "angular_veloc": [20, 36], "p": [20, 28, 36], "q": 20, "x_ddot": 20, "y_ddot": 20, "z_ddot": 20, "get_angular_velocity_frd": 20, "assum": [20, 22, 35, 36, 37, 39], "encond": 20, "convert": [20, 36], "ned": [20, 29, 36], "frd": [20, 29, 36], "onboard": 20, "flight": 20, "ndarrai": [20, 22, 36], "get_attitude_ned_frd": 20, "get_linear_acceleration_n": 20, "get_linear_body_velocity_ned_frd": 20, "get_linear_velocity_n": 20, "get_position_n": 20, "quadratic_thrust_curv": 21, "descriptio": 21, "thrustcurv": 21, "rotor_const": 21, "84e": 21, "rolling_moment_coeffici": 21, "1e": 21, "rot_dir": 21, "min_rotor_veloc": 21, "max_rotor_veloc": 21, "1100": 21, "set_input_refer": 21, "note": [21, 22, 27, 35, 36, 37, 38, 39], "left": [21, 36, 40], "depend": [21, 30, 35], "instant": 21, "axi": [21, 23, 36], "rolling_mo": 21, "roll": 21, "rotat": [21, 22, 23, 27, 29, 36, 37, 39], "propel": 21, "torqu": [21, 22, 23, 36], "about": [21, 30, 36, 39], "nm": [21, 22], "direct": [21, 32, 33, 36], "counter": 21, "clockwis": 21, "quadrotor": [22, 23, 27, 28, 29, 36, 37, 39], "init_orient": [22, 23, 27], "look": [22, 23, 36], "shape": [22, 23, 36], "force_and_torques_to_veloc": [22, 36], "improv": 22, "scheme": 22, "adopt": [22, 27, 36, 37], "made": [22, 25, 27, 30, 32, 39], "directli": [22, 27, 30, 33, 36], "reach": [22, 30], "accomplish": 22, "suchs": 22, "handle_propeller_visu": 22, "rotor_numb": 22, "articul": [22, 36, 37, 38, 39], "joint": [22, 27, 38, 39], "amount": [22, 36], "belong": 22, "case": [22, 36, 37, 38], "anyth": 22, "extra": 22, "motor": [22, 23, 36], "speed": [22, 23], "remove_vehicl": [23, 24], "curent": 23, "apply_forc": 23, "po": 23, "body_part": 23, "part": [23, 30], "dimension": 23, "fx": 23, "fy": 23, "fz": 23, "apply_torqu": 23, "rigid_body_nam": 23, "tx": 23, "ty": 23, "tz": 23, "get_dc_interfac": 23, "render": [23, 36, 37, 38, 39], "latter": 23, "timer": 23, "thorugh": 23, "update_sim_st": 23, "vehicle_nam": 23, "get_world_transform_matrix": 23, "see": [23, 30, 33, 35, 36, 37, 40], "kit": [23, 37], "calcul": 23, "translat": 23, "3d": [23, 25, 27, 30, 36, 37, 39], "plu": 23, "scale": 23, "tupl": 23, "vehil": 24, "add_vehicl": 24, "get_vehicle_manag": 24, "remove_all_vehicl": 24, "api": [25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40], "simulation_environ": [25, 26, 36, 37, 39], "As": [25, 30, 34, 35, 38], "grow": 25, "black": 25, "gridroom": [25, 36, 37, 39], "offic": [25, 38], "simpl": [25, 36, 37, 38, 39], "room": 25, "warehous": 25, "forklift": 25, "shelv": 25, "flat": 25, "plane": [25, 33, 36, 37, 38, 39], "rough": 25, "slope": 25, "stair": 25, "import": [25, 26, 27, 36, 37, 38, 39], "pg": [25, 26, 36, 37, 39], "index": [25, 30, 36], "column": [25, 36], "manual": [25, 28, 36, 37, 39], "drop": 25, "like": [25, 27, 30, 33, 36], "cavemen": 25, "howev": [25, 26, 32], "own": [25, 27, 35, 36, 37, 39], "By": [25, 26, 27, 30, 35, 39], "portug": 25, "90": [25, 35], "\u00ba": 25, "38": 25, "736832": 25, "137977": 25, "set_new_global_coordin": 25, "automat": [26, 29, 35, 36, 37, 38, 39], "modul": [26, 34, 35, 36, 37, 38, 39], "show": 26, "them": [26, 27, 36, 37], "mavlink_config": [26, 37, 39], "port": 26, "unus": 26, "iri": [26, 27, 29, 33, 35, 36, 37, 39], "config_multirotor": [26, 27, 37, 39], "intend": [26, 35], "path_to_px4_directori": 26, "3dr": [27, 29, 33, 36, 37, 39], "regard": [27, 30], "would": [27, 30, 33], "scratch": [27, 36], "scipi": [27, 36, 37, 39], "spatial": [27, 36, 37, 39], "multirotor_config": 27, "relat": [27, 30], "thrust_curv": 27, "50": [27, 36], "log": [27, 36], "scene": [27, 38, 39, 40], "from_eul": [27, 36, 37, 39], "xyz": [27, 36, 37, 39], "as_quat": [27, 36, 37, 39], "adher": 27, "therefor": [27, 31, 36, 39], "xform": 27, "revolut": 27, "coincid": 27, "tree": [27, 34, 39], "bellow": [27, 39], "mass": [27, 36], "materi": [27, 30, 32], "collid": 27, "anton": 28, "babushkin": 28, "2013": 28, "01": 28, "feb": 28, "url": 28, "mustafa": 28, "anadolu": 28, "univers": [28, 39], "turkei": 28, "2000": 28, "fadri": 28, "furrer": 28, "michael": 28, "burri": 28, "marku": 28, "achtelik": 28, "roland": 28, "siegwart": 28, "modular": [28, 38], "mav": 28, "595": 28, "625": 28, "springer": 28, "cham": 28, "2016": 28, "org": 28, "1007": 28, "978": 28, "319": 28, "26054": 28, "9_23": 28, "koenig": 28, "howard": 28, "paradigm": 28, "sourc": [28, 30, 32, 34], "multi": 28, "2004": 28, "ieee": [28, 36], "rsj": 28, "intellig": 28, "iro": 28, "2149": 28, "2154": 28, "1389727": 28, "mathworld": 28, "azimuth": 28, "04": 28, "wolfram": 28, "azimuthalequidistantproject": 28, "peter": 28, "maybeck": 28, "stochast": 28, "estim": 28, "press": [28, 35, 38, 39, 40], "1979": 28, "isbn": 28, "0124807011": 28, "lorenz": [28, 32], "meier": [28, 32], "dominik": 28, "honegg": 28, "marc": 28, "pollefei": 28, "node": [28, 33], "multithread": 28, "deepli": 28, "embed": 28, "platform": 28, "2015": 28, "autom": [28, 36], "icra": [28, 36], "6235": 28, "6240": 28, "7140074": 28, "mk11": [28, 36], "daniel": 28, "melling": [28, 36], "vijai": 28, "kumar": [28, 36], "minimum": [28, 36], "snap": [28, 36], "trajectori": [28, 36], "2011": [28, 36], "2520": [28, 36], "2525": [28, 36], "5980409": [28, 36], "govern": 28, "canada": 28, "compon": 28, "2020": 28, "geomag": 28, "nrcan": 28, "gc": 28, "ca": 28, "mag_fld": 28, "comp": 28, "en": 28, "php": 28, "pgc21": [28, 36], "jo": 28, "\u00e3": 28, "o": [28, 36, 39], "bruno": 28, "j": [28, 36], "guerreiro": [28, 36], "parcel": [28, 36], "relai": [28, 36], "manoeuvr": [28, 36], "2021": [28, 36], "137": [28, 36], "145": [28, 36], "joern": 28, "rehder": 28, "janosch": 28, "nikol": 28, "thoma": [28, 32], "schneider": 28, "timo": 28, "hinzmann": 28, "extend": 28, "kalibr": 28, "calibr": 28, "extrins": 28, "ax": 28, "4304": 28, "4311": 28, "7487628": 28, "shital": 28, "shah": 28, "debadeepta": 28, "dei": 28, "chri": 28, "lovett": 28, "ashish": 28, "kapoor": 28, "high": 28, "fidel": 28, "visual": [28, 34], "autonom": 28, "marco": 28, "hutter": 28, "editor": 28, "field": [28, 35], "servic": [28, 32], "621": 28, "635": 28, "snyder": 28, "technic": 28, "report": 28, "washington": 28, "1987": 28, "3133": 28, "pp1395": 28, "yunlong": 28, "song": 28, "selim": 28, "naji": 28, "kaufmann": 28, "loquercio": 28, "david": 28, "scaramuzza": 28, "flexibl": [28, 36], "proceed": 28, "learn": [28, 33, 36, 37, 38, 39], "1147": 28, "1157": 28, "notabl": 29, "format": [29, 30], "propos": 29, "pull": 29, "accordingli": [29, 30, 36], "widget": [29, 34, 35], "limit": [29, 32], "bakend": 29, "ro": [29, 33, 36, 37, 38], "fix": [29, 30, 33], "librari": [29, 36], "how": [29, 30, 36, 37, 38, 39, 40], "demo": 29, "nonlinear": [29, 36], "motiv": 29, "inner": 29, "basic": [29, 33, 34, 35, 39], "sphinx": [29, 30], "With": [30, 35], "said": 30, "veri": [30, 36, 38], "stumbl": 30, "miss": [30, 33, 36], "suggest": 30, "tab": [30, 35, 40], "discuss": 30, "submit": 30, "read": [30, 36, 37, 39], "two": 30, "git": [30, 35], "main": [30, 36, 37, 38, 39], "stabl": [30, 31, 35], "tag": 30, "dev": 30, "correspond": [30, 36, 37, 38, 39], "unstabl": 30, "test": [30, 31, 35, 36], "avoid": 30, "merg": 30, "prefer": [30, 38], "fork": 30, "permiss": [30, 32], "impos": 30, "constraint": 30, "addit": [30, 34], "guid": [30, 35, 36], "ensur": [30, 37, 38], "success": 30, "after": [30, 34, 35, 36, 37, 38, 39], "develop": [30, 31, 32, 35, 39], "team": [30, 31, 32], "review": 30, "feedback": [30, 36], "short": [30, 35, 40], "good": [30, 32], "what": [30, 36, 37, 39], "feat": 30, "rem": 30, "chore": 30, "abov": [30, 32, 35], "fit": [30, 32], "thurster": 30, "strictli": 30, "polici": 30, "highli": 30, "recommend": [30, 34, 35], "includ": [30, 32, 36], "overview": 30, "enough": 30, "understand": [30, 38], "broad": 30, "ha": [30, 32], "been": [30, 32], "conduct": [30, 36], "inlin": 30, "googl": 30, "while": [30, 34, 36, 37, 38, 39], "pep": 30, "guidelin": 30, "maintain": 30, "qualiti": 30, "consist": 30, "over": [30, 36], "codebas": 30, "pip": [30, 35], "polut": 30, "venv": 30, "conda": 30, "everyon": 30, "hate": 30, "write": [30, 36], "bore": 30, "That": [30, 36], "why": 30, "tri": 30, "written": [30, 32, 36], "restructuredtext": 30, "theme": 30, "mention": 30, "build": [30, 35, 36, 37, 38, 39], "few": [30, 35, 36], "enter": 30, "root": [30, 35], "cd": [30, 35], "txt": 30, "browser": 30, "xdg": 30, "_build": 30, "hard": [30, 35, 36], "consum": 30, "encourag": 30, "share": [30, 35], "thei": [30, 39], "feel": 30, "long": 30, "appropri": 30, "distribut": [30, 32], "still": [30, 31], "approach": [30, 37], "incorpor": 30, "solut": [30, 36], "lie": 30, "host": 30, "small": 30, "size": 30, "larg": 30, "server": 30, "great": 30, "idea": [30, 38], "subject": [30, 33], "card": 30, "jetson": 30, "board": 30, "out": [30, 32, 35], "humbl": 31, "ubuntu": [31, 35], "22": [31, 35], "04lt": [31, 35], "littl": 31, "bit": 31, "shaki": 31, "abl": [31, 35, 36], "fulli": [31, 35], "temporarili": 31, "disabl": [31, 35, 37], "re": 31, "soon": 31, "becom": 31, "meantim": 31, "lead": 32, "redistribut": 32, "binari": 32, "form": 32, "without": [32, 34, 35, 36, 37], "modif": 32, "permit": 32, "condit": 32, "met": 32, "retain": 32, "notic": [32, 36, 38], "disclaim": 32, "reproduc": 32, "neither": 32, "holder": 32, "nor": [32, 33, 36], "contributor": 32, "endors": 32, "promot": 32, "product": 32, "deriv": 32, "softwar": [32, 35], "prior": [32, 35], "BY": 32, "THE": 32, "AND": 32, "AS": 32, "OR": 32, "warranti": 32, "BUT": 32, "TO": 32, "OF": 32, "merchant": 32, "FOR": 32, "particular": 32, "IN": 32, "NO": 32, "shall": 32, "BE": 32, "liabl": 32, "indirect": 32, "incident": 32, "special": [32, 36], "exemplari": 32, "consequenti": 32, "damag": 32, "procur": 32, "substitut": 32, "loss": 32, "profit": 32, "busi": 32, "interrupt": 32, "caus": 32, "ON": 32, "theori": 32, "liabil": 32, "contract": 32, "strict": 32, "tort": 32, "neglig": 32, "aris": 32, "IF": 32, "advis": 32, "SUCH": 32, "free": 32, "io": [32, 37], "gubler": 32, "2012": 32, "There": 33, "deliveri": 33, "date": [33, 36], "prioriti": 33, "uncheck": 33, "alreadi": [33, 38, 39, 40], "baromt": 33, "udp": 33, "typhoon": 33, "wing": 33, "vtol": 33, "reinforc": 33, "rl": 33, "select": [33, 36, 37, 38, 39], "sampl": 33, "clone": [33, 35], "compil": [33, 35], "studio": 34, "hot": 34, "reload": 34, "vscode": 34, "debug": 34, "enabl": [34, 35, 37, 40], "better": 34, "modifi": 34, "autocomplet": 34, "link_app": 34, "sh": [34, 35], "isaacsim_path": [34, 35], "symbol": 34, "strucutur": 34, "pegasussimul": [34, 35], "interact": [34, 35, 40], "program": [34, 36, 37], "explain": 34, "our": [34, 36, 37, 38], "expos": [34, 38], "driver": 35, "550": 35, "dure": 35, "window": [35, 38, 39], "linux": 35, "download": [35, 40], "appimag": [35, 40], "line": [35, 36, 37, 39], "termin": [35, 36, 38, 39, 40], "wget": 35, "launcher": [35, 40], "interpret": 35, "along": 35, "pytorch": 35, "up": [35, 36, 37, 38, 39, 40], "simpler": [35, 37], "although": 35, "virtual": 35, "instruct": 35, "typic": 35, "home": [35, 37], "ov": 35, "pkg": 35, "isaac_sim": 35, "bashrc": 35, "zshrc": 35, "export": 35, "alia": 35, "isaacsim_python": [35, 36, 37, 38, 39], "remain": [35, 38], "itself": 35, "correctli": [35, 39], "ctrl": [35, 38, 39], "alt": 35, "t": [35, 36, 37, 39, 40], "help": [35, 38], "bundl": [35, 37], "print": [35, 37], "hello": 35, "cube": 35, "standalone_exampl": 35, "add_cub": 35, "unabl": 35, "successfuli": 35, "someth": [35, 36], "incorrectli": 35, "proce": [35, 39, 40], "addtion": 35, "resourc": 35, "troubleshoot": 35, "ssh": 35, "account": [35, 36], "kei": 35, "powerful": 35, "scritp": 35, "shown": [35, 39], "menubar": 35, "On": [35, 40], "menu": 35, "button": [35, 36, 38, 39, 40], "insert": [35, 36], "third": 35, "parti": 35, "second": [35, 36, 38], "pop": [35, 40], "appear": 35, "dock": 35, "bottom": [35, 40], "screen": [35, 40], "recogn": 35, "go": [35, 36, 40], "edit": 35, "content": 35, "instead": [35, 36, 38], "copi": 35, "packag": 35, "sudo": [35, 40], "apt": [35, 40], "cmake": 35, "python3": 35, "kconfiglib": 35, "jinja2": 35, "empi": 35, "jsonschema": 35, "pyro": 35, "genmsg": 35, "toml": 35, "checkout": 35, "loop": [35, 36, 37, 38, 39], "v1": [35, 39], "submodul": 35, "safest": 35, "init": 35, "recurs": 35, "px4_sitl_default": 35, "achiev": [35, 36, 39, 40], "yaml": 35, "nano": 35, "And": 35, "tell": 35, "text": 35, "repres": [35, 40], "tutori": [36, 37, 38, 39, 40], "law": 36, "math": 36, "behind": 36, "endup": 36, "determin": 36, "pure": 36, "algorithm": 36, "matlab": 36, "deal": 36, "4_python_single_vehicl": 36, "usr": [36, 37, 38, 39], "bin": [36, 37, 38, 39], "env": [36, 37, 38, 39], "joao": 36, "carb": [36, 37, 38, 39], "simulationapp": [36, 37, 38, 39], "crash": [36, 37, 38, 39], "simulation_app": [36, 37, 38, 39], "headless": [36, 37, 38, 39], "sy": 36, "abspath": 36, "dirnam": 36, "__file__": 36, "util": [36, 37], "nonlinear_control": 36, "nonlinearcontrol": 36, "pathlib": 36, "pars": 36, "csv": 36, "pegasusapp": [36, 37, 39], "acquir": [36, 37, 38, 39], "get_timeline_interfac": [36, 37, 38, 39], "shop": [36, 37, 38, 39], "primit": [36, 37, 38, 39], "etc": [36, 37, 38, 39], "_world": [36, 37, 39], "_world_set": [36, 37, 39], "result": [36, 39], "curr_dir": 36, "realpath": 36, "resolv": 36, "config_multirotor1": 36, "trajectory_fil": 36, "pitch_relay_90_deg_2": 36, "results_fil": 36, "single_statist": 36, "npz": 36, "ki": 36, "kr": 36, "quadrotor1": 36, "aka": [36, 37, 38, 39], "infinit": [36, 37, 38, 39], "is_run": [36, 37, 38, 39], "cleanup": [36, 37, 38, 39], "log_warn": [36, 37, 38, 39], "pg_app": [36, 37, 39], "__name__": [36, 37, 38, 39], "__main__": [36, 37, 38, 39], "quick": 36, "exponenti": 36, "demonstr": 36, "potenti": 36, "much": [36, 39], "fanci": 36, "color": 36, "aggress": 36, "b": 36, "athen": 36, "greec": 36, "pp": 36, "icuas51884": 36, "9476757": 36, "shanghai": 36, "china": 36, "revers": 36, "kp": 36, "kd": 36, "kw": 36, "input_ref": 36, "zero": 36, "ident": 36, "gain": 36, "matrix": 36, "outer": 36, "g": [36, 40], "81": 36, "graviti": 36, "read_trajectory_from_csv": 36, "max_index": 36, "_": 36, "total_tim": 36, "parametr": 36, "signal": 36, "reveived_first_st": 36, "analys": 36, "statist": 36, "time_vector": 36, "desired_position_over_tim": 36, "position_over_tim": 36, "position_error_over_tim": 36, "velocity_error_over_tim": 36, "atittude_error_over_tim": 36, "attitude_rate_error_over_tim": 36, "file_nam": 36, "arg": [36, 38], "panda": 36, "flip": 36, "genfromtxt": 36, "delimit": 36, "reset_statist": 36, "plot": 36, "later": 36, "vstack": 36, "desired_p": 36, "ep": 36, "ev": 36, "er": 36, "ew": 36, "savez": 36, "from_quat": 36, "extern": 36, "jerk": 36, "yaw": 36, "p_ref": 36, "v_ref": 36, "a_ref": 36, "j_ref": 36, "11": 36, "12": 36, "yaw_ref": 36, "13": 36, "yaw_rate_ref": 36, "Or": 36, "pd": 36, "d_pd": 36, "dd_pd": 36, "ddd_pd": 36, "yaw_d": 36, "d_yaw_d": 36, "error": 36, "ei": 36, "f_de": 36, "term": 36, "z_b": 36, "as_matrix": 36, "u_1": 36, "z_b_de": 36, "linalg": 36, "norm": 36, "x_c_de": 36, "co": [36, 37], "sin": [36, 37], "y_b_de": 36, "z_b_cross_x_c": 36, "cross": 36, "x_b_de": 36, "r_de": 36, "c_": 36, "e_r": 36, "vee": 36, "approxim": 36, "cannot": 36, "xb": 36, "yb": 36, "eqn": 36, "hw": 36, "dot": 36, "w_de": 36, "e_w": 36, "tau": 36, "staticmethod": 36, "take": [36, 38, 40], "element": 36, "equat": 36, "steep": 36, "agress": 36, "choos": 36, "almost": 36, "touch": 36, "exp": 36, "d_x": 36, "d_y": 36, "d_z": 36, "dd_x": 36, "dd_y": 36, "dd_z": 36, "ddd_x": 36, "ddd_y": 36, "ddd_z": 36, "yaw_rat": 36, "differ": [36, 37, 38], "rest": 36, "let": [36, 37, 38, 39], "explor": 36, "offer": 36, "compliant": 36, "geometr": 36, "decid": 36, "strategi": [36, 37], "statement": 36, "elif": 36, "care": 36, "most": [36, 37, 39], "fill": 36, "east": [36, 39], "north": [36, 39], "down": [36, 39], "front": 36, "don": [36, 37], "convers": 36, "length": 36, "layer": 36, "blue": [36, 37, 38, 39], "ground": [36, 37, 38, 39], "fly": 36, "fast": 36, "maneuvr": 36, "hit": 36, "again": [36, 39, 40], "repeat": 36, "unlik": 36, "qgroundcontrol": [36, 37, 39, 40], "won": 36, "normal": 36, "becaus": [36, 38], "surveil": 37, "search": 37, "rescu": 37, "mission": 37, "believ": 37, "intuit": 37, "9_peopl": 37, "disable_extens": 37, "enable_extens": 37, "extensions_peopl": 37, "retarget": 37, "ext_peopl": 37, "bridg": 37, "ros_bridg": 37, "ros2_bridg": 37, "These": 37, "restart": 37, "get_context": 37, "new_stag": 37, "circl": 37, "could": 37, "keyboard": 37, "circlepersoncontrol": 37, "super": 37, "_radiu": 37, "gamma": 37, "gamma_dot": 37, "_person": 37, "layout": 37, "people_assets_list": 37, "p1": 37, "person1": 37, "original_male_adult_construction_05": 37, "p2": 37, "person2": 37, "original_female_adult_business_02": 37, "stop_sim": [37, 38, 39], "properli": 37, "behavior": 37, "But": 37, "imagin": 37, "introduc": [38, 39, 40], "concept": [38, 39], "0_template_app": 38, "clean": 38, "add_default_ground_plan": 38, "add_physics_callback": 38, "template_physics_callback": 38, "physics_callback": 38, "add_render_callback": 38, "template_render_callback": 38, "render_callback": 38, "add_timeline_callback": 38, "template_timeline_callback": 38, "timeline_callback": 38, "log_info": 38, "timeline_ev": 38, "occur": 38, "is_stop": 38, "template_app": 38, "bare": 38, "bone": 38, "deeper": 38, "context": [38, 39], "60hz": [38, 39], "advantag": 38, "declar": [38, 39], "mani": 38, "necessari": 38, "previous": 38, "similarli": [38, 39], "cram": 38, "organ": 38, "end": 39, "equival": 39, "cover": [39, 40], "haven": [39, 40], "1_px4_single_vehicl": 39, "commonli": 39, "three": 39, "thing": 39, "meant": 39, "public": 39, "ii": 39, "untest": 39, "iii": 39, "deprec": 39, "replac": 39, "whose": 39, "whish": 39, "stage_path": 39, "usermod": 40, "dialout": 40, "modemmanag": 40, "gstreamer1": 40, "bad": 40, "libav": 40, "gl": 40, "libqt5gui5": 40, "libfuse2": 40, "imag": 40, "chmod": 40, "doubl": 40, "click": 40, "corner": 40, "bar": 40, "arrow": 40, "off": 40, "place": 40, "slide": 40, "confirm": 40, "waypoint": 40, "congratul": 40, "complet": 40}, "objects": {"pegasus.simulator.logic.backends": [[1, 0, 0, "-", "backend"], [2, 0, 0, "-", "mavlink_backend"], [3, 0, 0, "-", "ros2_backend"]], "pegasus.simulator.logic.backends.backend": [[1, 1, 1, "", "Backend"]], "pegasus.simulator.logic.backends.backend.Backend": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "initialize"], [1, 2, 1, "", "input_reference"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "update"], [1, 2, 1, "", "update_graphical_sensor"], [1, 2, 1, "", "update_sensor"], [1, 2, 1, "", "update_state"], [1, 3, 1, "", "vehicle"]], "pegasus.simulator.logic.backends.mavlink_backend": [[2, 1, 1, "", "MavlinkBackend"], [2, 1, 1, "", "MavlinkBackendConfig"]], "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend": [[2, 2, 1, "", "__del__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "handle_control"], [2, 2, 1, "", "input_reference"], [2, 2, 1, "", "poll_mavlink_messages"], [2, 2, 1, "", "re_initialize_interface"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "send_gps_msgs"], [2, 2, 1, "", "send_ground_truth"], [2, 2, 1, "", "send_heartbeat"], [2, 2, 1, "", "send_sensor_msgs"], [2, 2, 1, "", "send_vision_msgs"], [2, 2, 1, "", "start"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "update"], [2, 2, 1, "", "update_bar_data"], [2, 2, 1, "", "update_gps_data"], [2, 2, 1, "", "update_imu_data"], [2, 2, 1, "", "update_mag_data"], [2, 2, 1, "", "update_sensor"], [2, 2, 1, "", "update_state"], [2, 2, 1, "", "update_vision_data"], [2, 2, 1, "", "wait_for_first_hearbeat"]], "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackendConfig": [[2, 2, 1, "", "__init__"]], "pegasus.simulator.logic.backends.ros2_backend": [[3, 1, 1, "", "ROS2Backend"]], "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_lidar_writter"], [3, 2, 1, "", "add_monocular_camera_writter"], [3, 2, 1, "", "initialize_publishers"], [3, 2, 1, "", "initialize_subscribers"], [3, 2, 1, "", "input_reference"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "rotor_callback"], [3, 2, 1, "", "send_static_transforms"], [3, 2, 1, "", "start"], [3, 2, 1, "", "stop"], [3, 2, 1, "", "update"], [3, 2, 1, "", "update_gps_data"], [3, 2, 1, "", "update_graphical_sensor"], [3, 2, 1, "", "update_imu_data"], [3, 2, 1, "", "update_lidar_data"], [3, 2, 1, "", "update_mag_data"], [3, 2, 1, "", "update_monocular_camera_data"], [3, 2, 1, "", "update_sensor"], [3, 2, 1, "", "update_state"]], "pegasus.simulator.logic.dynamics": [[4, 0, 0, "-", "drag"], [5, 0, 0, "-", "linear_drag"]], "pegasus.simulator.logic.dynamics.drag": [[4, 1, 1, "", "Drag"]], "pegasus.simulator.logic.dynamics.drag.Drag": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "drag"], [4, 2, 1, "", "update"]], "pegasus.simulator.logic.dynamics.linear_drag": [[5, 1, 1, "", "LinearDrag"]], "pegasus.simulator.logic.dynamics.linear_drag.LinearDrag": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "drag"], [5, 2, 1, "", "update"]], "pegasus.simulator.logic.graphical_sensors": [[6, 0, 0, "-", "graphical_sensor"], [7, 0, 0, "-", "lidar"], [8, 0, 0, "-", "monocular_camera"]], "pegasus.simulator.logic.graphical_sensors.graphical_sensor": [[6, 1, 1, "", "GraphicalSensor"]], "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "config_from_dict"], [6, 2, 1, "", "initialize"], [6, 2, 1, "", "reset"], [6, 3, 1, "", "sensor_type"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "update"], [6, 2, 1, "", "update_at_rate"], [6, 4, 1, "", "update_period"], [6, 3, 1, "", "update_rate"], [6, 3, 1, "", "vehicle"]], "pegasus.simulator.logic.graphical_sensors.lidar": [[7, 1, 1, "", "Lidar"]], "pegasus.simulator.logic.graphical_sensors.lidar.Lidar": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "initialize"], [7, 2, 1, "", "start"], [7, 3, 1, "", "state"], [7, 2, 1, "", "update"]], "pegasus.simulator.logic.graphical_sensors.monocular_camera": [[8, 1, 1, "", "MonocularCamera"]], "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "initialize"], [8, 2, 1, "", "start"], [8, 3, 1, "", "state"], [8, 2, 1, "", "stop"], [8, 2, 1, "", "update"]], "pegasus.simulator.logic.graphs": [[9, 0, 0, "-", "graph"], [10, 0, 0, "-", "ros2_camera_graph"]], "pegasus.simulator.logic.graphs.graph": [[9, 1, 1, "", "Graph"]], "pegasus.simulator.logic.graphs.graph.Graph": [[9, 2, 1, "", "__init__"], [9, 3, 1, "id0", "graph_prim_path"], [9, 3, 1, "", "graph_type"], [9, 2, 1, "", "initialize"]], "pegasus.simulator.logic.graphs.ros2_camera_graph": [[10, 1, 1, "", "ROS2CameraGraph"]], "pegasus.simulator.logic.graphs.ros2_camera_graph.ROS2CameraGraph": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "camera_labels_topic"], [10, 2, 1, "", "camera_topic"], [10, 2, 1, "", "initialize"]], "pegasus.simulator.logic.interface": [[13, 0, 0, "-", "pegasus_interface"]], "pegasus.simulator.logic.interface.pegasus_interface": [[13, 1, 1, "", "PegasusInterface"]], "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface": [[13, 2, 1, "", "__del__"], [13, 2, 1, "", "__init__"], [13, 2, 1, "", "__new__"], [13, 3, 1, "", "altitude"], [13, 2, 1, "", "clear_scene"], [13, 2, 1, "", "generate_quadrotor_config_from_yaml"], [13, 2, 1, "", "get_all_vehicles"], [13, 2, 1, "", "get_default_environments"], [13, 2, 1, "", "get_vehicle"], [13, 2, 1, "", "initialize_world"], [13, 3, 1, "", "latitude"], [13, 2, 1, "", "load_asset"], [13, 2, 1, "", "load_environment"], [13, 2, 1, "", "load_environment_async"], [13, 2, 1, "", "load_nvidia_environment"], [13, 3, 1, "", "longitude"], [13, 3, 1, "", "px4_default_airframe"], [13, 3, 1, "", "px4_path"], [13, 2, 1, "", "set_default_global_coordinates"], [13, 2, 1, "", "set_global_coordinates"], [13, 2, 1, "", "set_new_default_global_coordinates"], [13, 2, 1, "", "set_px4_default_airframe"], [13, 2, 1, "", "set_px4_path"], [13, 2, 1, "", "set_viewport_camera"], [13, 2, 1, "", "set_world_settings"], [13, 3, 1, "", "vehicle_manager"], [13, 3, 1, "", "world"]], "pegasus.simulator.logic.people": [[14, 0, 0, "-", "person"], [14, 0, 0, "-", "person_controller"]], "pegasus.simulator.logic.people.person": [[14, 1, 1, "", "Person"]], "pegasus.simulator.logic.people.person.Person": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "add_animation_graph_to_agent"], [14, 4, 1, "", "assets_root_path"], [14, 4, 1, "", "character_root_prim_path"], [14, 2, 1, "", "get_character_asset_list"], [14, 2, 1, "", "get_path_for_character_prim"], [14, 2, 1, "", "get_usd_in_folder"], [14, 2, 1, "", "sim_start_stop"], [14, 2, 1, "", "spawn_agent"], [14, 2, 1, "", "start"], [14, 3, 1, "", "state"], [14, 2, 1, "", "stop"], [14, 2, 1, "", "update"], [14, 2, 1, "", "update_state"], [14, 2, 1, "", "update_target_position"]], "pegasus.simulator.logic.people.person_controller": [[14, 1, 1, "", "PersonController"]], "pegasus.simulator.logic.people.person_controller.PersonController": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "initialize"], [14, 3, 1, "", "person"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "start"], [14, 2, 1, "", "stop"], [14, 2, 1, "", "update"], [14, 2, 1, "", "update_state"]], "pegasus.simulator.logic": [[14, 0, 0, "-", "people_manager"], [20, 0, 0, "-", "state"], [24, 0, 0, "-", "vehicle_manager"]], "pegasus.simulator.logic.people_manager": [[14, 1, 1, "", "PeopleManager"]], "pegasus.simulator.logic.people_manager.PeopleManager": [[14, 2, 1, "", "__del__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "add_person"], [14, 2, 1, "", "get_people_manager"], [14, 2, 1, "", "get_person"], [14, 3, 1, "", "people"], [14, 2, 1, "", "rebuild_nav_mesh"], [14, 2, 1, "", "remove_all_people"], [14, 2, 1, "", "remove_person"]], "pegasus.simulator.logic.sensors": [[15, 0, 0, "-", "barometer"], [16, 0, 0, "-", "gps"], [17, 0, 0, "-", "imu"], [18, 0, 0, "-", "magnetometer"], [19, 0, 0, "-", "sensor"]], "pegasus.simulator.logic.sensors.barometer": [[15, 1, 1, "", "Barometer"]], "pegasus.simulator.logic.sensors.barometer.Barometer": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "state"], [15, 2, 1, "", "update"]], "pegasus.simulator.logic.sensors.gps": [[16, 1, 1, "", "GPS"]], "pegasus.simulator.logic.sensors.gps.GPS": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "state"], [16, 2, 1, "", "update"]], "pegasus.simulator.logic.sensors.imu": [[17, 1, 1, "", "IMU"]], "pegasus.simulator.logic.sensors.imu.IMU": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "state"], [17, 2, 1, "", "update"]], "pegasus.simulator.logic.sensors.magnetometer": [[18, 1, 1, "", "Magnetometer"]], "pegasus.simulator.logic.sensors.magnetometer.Magnetometer": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "state"], [18, 2, 1, "", "update"]], "pegasus.simulator.logic.sensors.sensor": [[19, 1, 1, "", "Sensor"]], "pegasus.simulator.logic.sensors.sensor.Sensor": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "config_from_dict"], [19, 2, 1, "", "initialize"], [19, 4, 1, "", "origin_alt"], [19, 4, 1, "", "origin_lat"], [19, 4, 1, "", "origin_lon"], [19, 2, 1, "", "reset"], [19, 3, 1, "", "sensor_type"], [19, 2, 1, "", "set_update_rate"], [19, 2, 1, "", "start"], [19, 3, 1, "", "state"], [19, 2, 1, "", "stop"], [19, 2, 1, "", "update"], [19, 2, 1, "", "update_at_rate"], [19, 4, 1, "", "update_period"], [19, 3, 1, "", "update_rate"]], "pegasus.simulator.logic.state": [[20, 1, 1, "", "State"]], "pegasus.simulator.logic.state.State": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "get_angular_velocity_frd"], [20, 2, 1, "", "get_attitude_ned_frd"], [20, 2, 1, "", "get_linear_acceleration_ned"], [20, 2, 1, "", "get_linear_body_velocity_ned_frd"], [20, 2, 1, "", "get_linear_velocity_ned"], [20, 2, 1, "", "get_position_ned"]], "pegasus.simulator.logic.thrusters": [[21, 0, 0, "-", "quadratic_thrust_curve"]], "pegasus.simulator.logic.thrusters.quadratic_thrust_curve": [[21, 1, 1, "", "QuadraticThrustCurve"]], "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "force"], [21, 3, 1, "", "rolling_moment"], [21, 3, 1, "", "rot_dir"], [21, 2, 1, "", "set_input_reference"], [21, 2, 1, "", "update"], [21, 3, 1, "", "velocity"]], "pegasus.simulator.logic.vehicle_manager": [[24, 1, 1, "", "VehicleManager"]], "pegasus.simulator.logic.vehicle_manager.VehicleManager": [[24, 2, 1, "", "__del__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "__new__"], [24, 2, 1, "", "add_vehicle"], [24, 2, 1, "", "get_vehicle"], [24, 2, 1, "", "get_vehicle_manager"], [24, 2, 1, "", "remove_all_vehicles"], [24, 2, 1, "", "remove_vehicle"], [24, 3, 1, "", "vehicles"]], "pegasus.simulator.logic.vehicles": [[22, 0, 0, "-", "multirotor"], [23, 0, 0, "-", "vehicle"]], "pegasus.simulator.logic.vehicles.multirotor": [[22, 1, 1, "", "Multirotor"], [22, 1, 1, "", "MultirotorConfig"]], "pegasus.simulator.logic.vehicles.multirotor.Multirotor": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "force_and_torques_to_velocities"], [22, 2, 1, "", "handle_propeller_visual"], [22, 2, 1, "", "start"], [22, 2, 1, "", "stop"], [22, 2, 1, "", "update"]], "pegasus.simulator.logic.vehicles.multirotor.MultirotorConfig": [[22, 2, 1, "", "__init__"]], "pegasus.simulator.logic.vehicles.vehicle": [[23, 1, 1, "", "Vehicle"], [23, 5, 1, "", "get_world_transform_xform"]], "pegasus.simulator.logic.vehicles.vehicle.Vehicle": [[23, 2, 1, "", "__del__"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "apply_force"], [23, 2, 1, "", "apply_torque"], [23, 2, 1, "", "get_dc_interface"], [23, 2, 1, "", "sim_start_stop"], [23, 2, 1, "", "start"], [23, 3, 1, "", "state"], [23, 2, 1, "", "stop"], [23, 2, 1, "", "update"], [23, 2, 1, "", "update_graphical_sensors"], [23, 2, 1, "", "update_sensors"], [23, 2, 1, "", "update_sim_state"], [23, 2, 1, "", "update_state"], [23, 3, 1, "", "vehicle_name"]], "pegasus.simulator": [[12, 0, 0, "-", "params"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"pegasu": [0, 11, 13, 32, 35], "simul": [0, 25, 32, 35, 37, 39, 40], "overview": 0, "latest": 0, "updat": 0, "guidanc": 0, "control": [0, 11, 31, 36], "navig": 0, "project": [0, 30], "develop": [0, 34], "team": 0, "get": 0, "start": 0, "tutori": 0, "featur": [0, 30], "sourc": 0, "api": [0, 11], "refer": [0, 11], "other": 0, "framework": 0, "sponsor": [0, 30], "backend": [1, 2, 3, 11, 31], "mavlink": 2, "ros2": [3, 10], "drag": [4, 5], "linear": 5, "graphic": [6, 11], "sensor": [6, 11, 19], "lidar": 7, "monocular": 8, "camera": [8, 10], "graph": [9, 10, 11], "dynam": 11, "thruster": 11, "vehicl": [11, 23, 24, 27], "peopl": [11, 14, 37], "interac": 11, "default": 11, "param": [11, 12], "interfac": 13, "baromet": 15, "gp": 16, "imu": 17, "magnetomet": 18, "state": 20, "quadrat": 21, "thrust": 21, "curv": 21, "multirotor": 22, "manag": 24, "environ": [25, 35], "list": 25, "provid": 25, "set": [25, 35], "map": 25, "global": 25, "coordin": 25, "px4": [26, 35], "integr": 26, "bibliographi": 28, "changelog": 29, "1": [29, 36, 37, 38, 39, 40], "0": [29, 36, 37, 39, 40], "2023": 29, "02": 29, "17": 29, "ad": 29, "contribut": 30, "issu": [30, 31], "bug": 30, "report": 30, "request": 30, "branch": 30, "version": 30, "model": 30, "code": [30, 34, 36, 37, 38, 39], "commit": 30, "messag": 30, "pull": 30, "style": 30, "document": 30, "asset": [30, 32], "known": 31, "ro": 31, "2": [31, 36, 37, 38, 39], "work": 31, "properli": 31, "licens": 32, "3dr": 32, "iri": 32, "roadmap": 33, "structur": 34, "instal": 35, "nvidia": 35, "isaac": 35, "sim": 35, "configur": 35, "variabl": 35, "run": [35, 40], "extens": [35, 40], "librari": 35, "autopilot": 35, "path": 35, "insid": 35, "creat": [36, 38], "custom": 36, "prepar": [36, 37, 39, 40], "explan": [36, 37, 38, 39], "3": [36, 37, 38, 39], "execut": [36, 37, 38, 39], "move": 37, "standalon": 38, "applic": 38, "your": 39, "first": 39, "mode": 40, "gui": 40, "step": 40}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Pegasus Simulator": [[0, "pegasus-simulator"]], "Overview": [[0, "overview"]], "Latest Updates": [[0, "latest-updates"]], "Guidance, Control and Navigation Project": [[0, "guidance-control-and-navigation-project"]], "Developer Team": [[0, "developer-team"]], "Getting Started": [[0, null]], "Tutorials": [[0, null]], "Features": [[0, null]], "Source API": [[0, null]], "References": [[0, null]], "Other Simulation Frameworks": [[0, "other-simulation-frameworks"]], "Project Sponsors": [[0, "project-sponsors"]], "Backend": [[1, "module-pegasus.simulator.logic.backends.backend"]], "Mavlink Backend": [[2, "module-pegasus.simulator.logic.backends.mavlink_backend"]], "ROS2 Backend": [[3, "module-pegasus.simulator.logic.backends.ros2_backend"]], "Drag": [[4, "module-pegasus.simulator.logic.dynamics.drag"]], "Linear Drag": [[5, "module-pegasus.simulator.logic.dynamics.linear_drag"]], "Graphical Sensor": [[6, "module-pegasus.simulator.logic.graphical_sensors.graphical_sensor"]], "Lidar": [[7, "module-pegasus.simulator.logic.graphical_sensors.lidar"]], "Monocular Camera": [[8, "module-pegasus.simulator.logic.graphical_sensors.monocular_camera"]], "Graph": [[9, "module-pegasus.simulator.logic.graphs.graph"]], "ROS2 Camera Graph": [[10, "module-pegasus.simulator.logic.graphs.ros2_camera_graph"]], "API Reference": [[11, "api-reference"]], "Sensors": [[11, "sensors"]], "Graphical Sensors": [[11, "graphical-sensors"]], "Graphs": [[11, "graphs"]], "Dynamics": [[11, "dynamics"]], "Thruster": [[11, "thruster"]], "Control Backends": [[11, "control-backends"]], "Vehicle": [[11, "vehicle"], [23, "module-pegasus.simulator.logic.vehicles.vehicle"]], "People": [[11, "people"], [14, "module-pegasus.simulator.logic.people.person"]], "Pegasus Interace": [[11, "pegasus-interace"]], "Default Params": [[11, "default-params"]], "Params": [[12, "module-pegasus.simulator.params"]], "Pegasus Interface": [[13, "module-pegasus.simulator.logic.interface.pegasus_interface"]], "Barometer": [[15, "barometer"]], "GPS": [[16, "gps"]], "Imu": [[17, "imu"]], "Magnetometer": [[18, "magnetometer"]], "Sensor": [[19, "module-pegasus.simulator.logic.sensors.sensor"]], "State": [[20, "module-pegasus.simulator.logic.state"]], "Quadratic Thrust Curve": [[21, "module-pegasus.simulator.logic.thrusters.quadratic_thrust_curve"]], "Multirotor": [[22, "module-pegasus.simulator.logic.vehicles.multirotor"]], "Vehicle Manager": [[24, "module-pegasus.simulator.logic.vehicle_manager"]], "Environments": [[25, "environments"]], "List of provided simulation environments": [[25, "list-of-provided-simulation-environments"]], "Setting the Map Global Coordinates": [[25, "setting-the-map-global-coordinates"]], "PX4 Integration": [[26, "px4-integration"]], "Vehicles": [[27, "vehicles"]], "Bibliography": [[28, "bibliography"]], "Changelog": [[29, "changelog"]], "[1.0.0] - 2023-02-17": [[29, "id1"]], "Added": [[29, "added"]], "Contributing": [[30, "contributing"]], "Issues, Bug Reporting and Feature Requests": [[30, "issues-bug-reporting-and-feature-requests"]], "Branch and Version Model": [[30, "branch-and-version-model"]], "Contributing with Code": [[30, "contributing-with-code"]], "Commit Messages": [[30, "commit-messages"]], "Pull Requests": [[30, "pull-requests"]], "Code Style": [[30, "code-style"]], "Contributing with Documentation": [[30, "contributing-with-documentation"]], "Contributing with Assets": [[30, "contributing-with-assets"]], "Sponsor the project": [[30, "sponsor-the-project"]], "Known Issues": [[31, "known-issues"]], "ROS 2 control backend not-working properly": [[31, "ros-2-control-backend-not-working-properly"]], "License": [[32, "license"]], "Pegasus Simulator License": [[32, "pegasus-simulator-license"]], "3DR Iris Asset": [[32, "dr-iris-asset"]], "Roadmap": [[33, "roadmap"]], "Development": [[34, "development"]], "Code structure": [[34, "code-structure"]], "Installation": [[35, "installation"]], "Installing NVIDIA Isaac Sim": [[35, "installing-nvidia-isaac-sim"]], "Configuring the environment variables": [[35, "configuring-the-environment-variables"]], "Running Isaac Sim": [[35, "running-isaac-sim"]], "Installing the Pegasus Simulator": [[35, "installing-the-pegasus-simulator"]], "Installing the extension as a library": [[35, "installing-the-extension-as-a-library"]], "Installing PX4-Autopilot": [[35, "installing-px4-autopilot"]], "Setting the PX4 path inside the Pegasus Simulator": [[35, "setting-the-px4-path-inside-the-pegasus-simulator"]], "Create a Custom Controller": [[36, "create-a-custom-controller"]], "0. Preparation": [[36, "preparation"], [37, "preparation"], [39, "preparation"], [40, "preparation"]], "1. Code": [[36, "code"], [37, "code"], [38, "code"], [39, "code"]], "2. Explanation": [[36, "explanation"], [37, "explanation"], [38, "explanation"], [39, "explanation"]], "3. Execution": [[36, "execution"], [37, "execution"], [38, "execution"], [39, "execution"]], "Simulation with Moving People": [[37, "simulation-with-moving-people"]], "Create a Standalone Application": [[38, "create-a-standalone-application"]], "Your First Simulation": [[39, "your-first-simulation"]], "Run in Extension Mode (GUI)": [[40, "run-in-extension-mode-gui"]], "1. Simulation Steps": [[40, "simulation-steps"]]}, "indexentries": {"backend (class in pegasus.simulator.logic.backends.backend)": [[1, "pegasus.simulator.logic.backends.backend.Backend"]], "__init__() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.__init__"]], "initialize() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.initialize"]], "input_reference() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.input_reference"]], "module": [[1, "module-pegasus.simulator.logic.backends.backend"], [2, "module-pegasus.simulator.logic.backends.mavlink_backend"], [3, "module-pegasus.simulator.logic.backends.ros2_backend"], [4, "module-pegasus.simulator.logic.dynamics.drag"], [5, "module-pegasus.simulator.logic.dynamics.linear_drag"], [6, "module-pegasus.simulator.logic.graphical_sensors.graphical_sensor"], [7, "module-pegasus.simulator.logic.graphical_sensors.lidar"], [8, "module-pegasus.simulator.logic.graphical_sensors.monocular_camera"], [9, "module-pegasus.simulator.logic.graphs.graph"], [10, "module-pegasus.simulator.logic.graphs.ros2_camera_graph"], [12, "module-pegasus.simulator.params"], [13, "module-pegasus.simulator.logic.interface.pegasus_interface"], [14, "module-pegasus.simulator.logic.people.person"], [14, "module-pegasus.simulator.logic.people.person_controller"], [14, "module-pegasus.simulator.logic.people_manager"], [15, "module-pegasus.simulator.logic.sensors.barometer"], [16, "module-pegasus.simulator.logic.sensors.gps"], [17, "module-pegasus.simulator.logic.sensors.imu"], [18, "module-pegasus.simulator.logic.sensors.magnetometer"], [19, "module-pegasus.simulator.logic.sensors.sensor"], [20, "module-pegasus.simulator.logic.state"], [21, "module-pegasus.simulator.logic.thrusters.quadratic_thrust_curve"], [22, "module-pegasus.simulator.logic.vehicles.multirotor"], [23, "module-pegasus.simulator.logic.vehicles.vehicle"], [24, "module-pegasus.simulator.logic.vehicle_manager"]], "pegasus.simulator.logic.backends.backend": [[1, "module-pegasus.simulator.logic.backends.backend"]], "reset() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.reset"]], "start() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.start"]], "stop() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.stop"]], "update() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.update"]], "update_graphical_sensor() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.update_graphical_sensor"]], "update_sensor() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.update_sensor"]], "update_state() (pegasus.simulator.logic.backends.backend.backend method)": [[1, "pegasus.simulator.logic.backends.backend.Backend.update_state"]], "vehicle (pegasus.simulator.logic.backends.backend.backend property)": [[1, "pegasus.simulator.logic.backends.backend.Backend.vehicle"]], "mavlinkbackend (class in pegasus.simulator.logic.backends.mavlink_backend)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend"]], "mavlinkbackendconfig (class in pegasus.simulator.logic.backends.mavlink_backend)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackendConfig"]], "__del__() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.__del__"]], "__init__() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.__init__"]], "__init__() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackendconfig method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackendConfig.__init__"]], "handle_control() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.handle_control"]], "input_reference() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.input_reference"]], "pegasus.simulator.logic.backends.mavlink_backend": [[2, "module-pegasus.simulator.logic.backends.mavlink_backend"]], "poll_mavlink_messages() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.poll_mavlink_messages"]], "re_initialize_interface() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.re_initialize_interface"]], "reset() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.reset"]], "send_gps_msgs() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.send_gps_msgs"]], "send_ground_truth() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.send_ground_truth"]], "send_heartbeat() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.send_heartbeat"]], "send_sensor_msgs() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.send_sensor_msgs"]], "send_vision_msgs() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.send_vision_msgs"]], "start() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.start"]], "stop() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.stop"]], "update() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update"]], "update_bar_data() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_bar_data"]], "update_gps_data() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_gps_data"]], "update_imu_data() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_imu_data"]], "update_mag_data() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_mag_data"]], "update_sensor() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_sensor"]], "update_state() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_state"]], "update_vision_data() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.update_vision_data"]], "wait_for_first_hearbeat() (pegasus.simulator.logic.backends.mavlink_backend.mavlinkbackend method)": [[2, "pegasus.simulator.logic.backends.mavlink_backend.MavlinkBackend.wait_for_first_hearbeat"]], "ros2backend (class in pegasus.simulator.logic.backends.ros2_backend)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend"]], "__init__() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.__init__"]], "add_lidar_writter() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.add_lidar_writter"]], "add_monocular_camera_writter() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.add_monocular_camera_writter"]], "initialize_publishers() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.initialize_publishers"]], "initialize_subscribers() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.initialize_subscribers"]], "input_reference() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.input_reference"]], "pegasus.simulator.logic.backends.ros2_backend": [[3, "module-pegasus.simulator.logic.backends.ros2_backend"]], "reset() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.reset"]], "rotor_callback() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.rotor_callback"]], "send_static_transforms() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.send_static_transforms"]], "start() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.start"]], "stop() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.stop"]], "update() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update"]], "update_gps_data() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_gps_data"]], "update_graphical_sensor() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_graphical_sensor"]], "update_imu_data() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_imu_data"]], "update_lidar_data() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_lidar_data"]], "update_mag_data() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_mag_data"]], "update_monocular_camera_data() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_monocular_camera_data"]], "update_sensor() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_sensor"]], "update_state() (pegasus.simulator.logic.backends.ros2_backend.ros2backend method)": [[3, "pegasus.simulator.logic.backends.ros2_backend.ROS2Backend.update_state"]], "drag (class in pegasus.simulator.logic.dynamics.drag)": [[4, "pegasus.simulator.logic.dynamics.drag.Drag"]], "__init__() (pegasus.simulator.logic.dynamics.drag.drag method)": [[4, "pegasus.simulator.logic.dynamics.drag.Drag.__init__"]], "drag (pegasus.simulator.logic.dynamics.drag.drag property)": [[4, "pegasus.simulator.logic.dynamics.drag.Drag.drag"]], "pegasus.simulator.logic.dynamics.drag": [[4, "module-pegasus.simulator.logic.dynamics.drag"]], "update() (pegasus.simulator.logic.dynamics.drag.drag method)": [[4, "pegasus.simulator.logic.dynamics.drag.Drag.update"]], "lineardrag (class in pegasus.simulator.logic.dynamics.linear_drag)": [[5, "pegasus.simulator.logic.dynamics.linear_drag.LinearDrag"]], "__init__() (pegasus.simulator.logic.dynamics.linear_drag.lineardrag method)": [[5, "pegasus.simulator.logic.dynamics.linear_drag.LinearDrag.__init__"]], "drag (pegasus.simulator.logic.dynamics.linear_drag.lineardrag property)": [[5, "pegasus.simulator.logic.dynamics.linear_drag.LinearDrag.drag"]], "pegasus.simulator.logic.dynamics.linear_drag": [[5, "module-pegasus.simulator.logic.dynamics.linear_drag"]], "update() (pegasus.simulator.logic.dynamics.linear_drag.lineardrag method)": [[5, "pegasus.simulator.logic.dynamics.linear_drag.LinearDrag.update"]], "graphicalsensor (class in pegasus.simulator.logic.graphical_sensors.graphical_sensor)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor"]], "__init__() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.__init__"]], "config_from_dict() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.config_from_dict"]], "initialize() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.initialize"]], "pegasus.simulator.logic.graphical_sensors.graphical_sensor": [[6, "module-pegasus.simulator.logic.graphical_sensors.graphical_sensor"]], "reset() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.reset"]], "sensor_type (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor property)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.sensor_type"]], "start() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.start"]], "state (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor property)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.state"]], "stop() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.stop"]], "update() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.update"]], "update_at_rate() (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor method)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.update_at_rate"]], "update_period (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor attribute)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.update_period"]], "update_rate (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor property)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.update_rate"]], "vehicle (pegasus.simulator.logic.graphical_sensors.graphical_sensor.graphicalsensor property)": [[6, "pegasus.simulator.logic.graphical_sensors.graphical_sensor.GraphicalSensor.vehicle"]], "lidar (class in pegasus.simulator.logic.graphical_sensors.lidar)": [[7, "pegasus.simulator.logic.graphical_sensors.lidar.Lidar"]], "__init__() (pegasus.simulator.logic.graphical_sensors.lidar.lidar method)": [[7, "pegasus.simulator.logic.graphical_sensors.lidar.Lidar.__init__"]], "initialize() (pegasus.simulator.logic.graphical_sensors.lidar.lidar method)": [[7, "pegasus.simulator.logic.graphical_sensors.lidar.Lidar.initialize"]], "pegasus.simulator.logic.graphical_sensors.lidar": [[7, "module-pegasus.simulator.logic.graphical_sensors.lidar"]], "start() (pegasus.simulator.logic.graphical_sensors.lidar.lidar method)": [[7, "pegasus.simulator.logic.graphical_sensors.lidar.Lidar.start"]], "state (pegasus.simulator.logic.graphical_sensors.lidar.lidar property)": [[7, "pegasus.simulator.logic.graphical_sensors.lidar.Lidar.state"]], "update() (pegasus.simulator.logic.graphical_sensors.lidar.lidar method)": [[7, "pegasus.simulator.logic.graphical_sensors.lidar.Lidar.update"]], "monocularcamera (class in pegasus.simulator.logic.graphical_sensors.monocular_camera)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera"]], "__init__() (pegasus.simulator.logic.graphical_sensors.monocular_camera.monocularcamera method)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera.__init__"]], "initialize() (pegasus.simulator.logic.graphical_sensors.monocular_camera.monocularcamera method)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera.initialize"]], "pegasus.simulator.logic.graphical_sensors.monocular_camera": [[8, "module-pegasus.simulator.logic.graphical_sensors.monocular_camera"]], "start() (pegasus.simulator.logic.graphical_sensors.monocular_camera.monocularcamera method)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera.start"]], "state (pegasus.simulator.logic.graphical_sensors.monocular_camera.monocularcamera property)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera.state"]], "stop() (pegasus.simulator.logic.graphical_sensors.monocular_camera.monocularcamera method)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera.stop"]], "update() (pegasus.simulator.logic.graphical_sensors.monocular_camera.monocularcamera method)": [[8, "pegasus.simulator.logic.graphical_sensors.monocular_camera.MonocularCamera.update"]], "graph (class in pegasus.simulator.logic.graphs.graph)": [[9, "pegasus.simulator.logic.graphs.graph.Graph"]], "__init__() (pegasus.simulator.logic.graphs.graph.graph method)": [[9, "pegasus.simulator.logic.graphs.graph.Graph.__init__"]], "graph_prim_path (pegasus.simulator.logic.graphs.graph.graph attribute)": [[9, "pegasus.simulator.logic.graphs.graph.Graph.graph_prim_path"]], "graph_prim_path (pegasus.simulator.logic.graphs.graph.graph property)": [[9, "id0"]], "graph_type (pegasus.simulator.logic.graphs.graph.graph property)": [[9, "pegasus.simulator.logic.graphs.graph.Graph.graph_type"]], "initialize() (pegasus.simulator.logic.graphs.graph.graph method)": [[9, "pegasus.simulator.logic.graphs.graph.Graph.initialize"]], "pegasus.simulator.logic.graphs.graph": [[9, "module-pegasus.simulator.logic.graphs.graph"]], "ros2cameragraph (class in pegasus.simulator.logic.graphs.ros2_camera_graph)": [[10, "pegasus.simulator.logic.graphs.ros2_camera_graph.ROS2CameraGraph"]], "__init__() (pegasus.simulator.logic.graphs.ros2_camera_graph.ros2cameragraph method)": [[10, "pegasus.simulator.logic.graphs.ros2_camera_graph.ROS2CameraGraph.__init__"]], "camera_labels_topic() (pegasus.simulator.logic.graphs.ros2_camera_graph.ros2cameragraph method)": [[10, "pegasus.simulator.logic.graphs.ros2_camera_graph.ROS2CameraGraph.camera_labels_topic"]], "camera_topic() (pegasus.simulator.logic.graphs.ros2_camera_graph.ros2cameragraph method)": [[10, "pegasus.simulator.logic.graphs.ros2_camera_graph.ROS2CameraGraph.camera_topic"]], "initialize() (pegasus.simulator.logic.graphs.ros2_camera_graph.ros2cameragraph method)": [[10, "pegasus.simulator.logic.graphs.ros2_camera_graph.ROS2CameraGraph.initialize"]], "pegasus.simulator.logic.graphs.ros2_camera_graph": [[10, "module-pegasus.simulator.logic.graphs.ros2_camera_graph"]], "pegasus.simulator.params": [[12, "module-pegasus.simulator.params"]], "pegasusinterface (class in pegasus.simulator.logic.interface.pegasus_interface)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface"]], "__del__() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.__del__"]], "__init__() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.__init__"]], "__new__() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface static method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.__new__"]], "altitude (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.altitude"]], "clear_scene() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.clear_scene"]], "generate_quadrotor_config_from_yaml() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.generate_quadrotor_config_from_yaml"]], "get_all_vehicles() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.get_all_vehicles"]], "get_default_environments() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.get_default_environments"]], "get_vehicle() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.get_vehicle"]], "initialize_world() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.initialize_world"]], "latitude (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.latitude"]], "load_asset() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.load_asset"]], "load_environment() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.load_environment"]], "load_environment_async() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.load_environment_async"]], "load_nvidia_environment() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.load_nvidia_environment"]], "longitude (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.longitude"]], "pegasus.simulator.logic.interface.pegasus_interface": [[13, "module-pegasus.simulator.logic.interface.pegasus_interface"]], "px4_default_airframe (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.px4_default_airframe"]], "px4_path (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.px4_path"]], "set_default_global_coordinates() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_default_global_coordinates"]], "set_global_coordinates() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_global_coordinates"]], "set_new_default_global_coordinates() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_new_default_global_coordinates"]], "set_px4_default_airframe() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_px4_default_airframe"]], "set_px4_path() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_px4_path"]], "set_viewport_camera() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_viewport_camera"]], "set_world_settings() (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface method)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.set_world_settings"]], "vehicle_manager (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.vehicle_manager"]], "world (pegasus.simulator.logic.interface.pegasus_interface.pegasusinterface property)": [[13, "pegasus.simulator.logic.interface.pegasus_interface.PegasusInterface.world"]], "peoplemanager (class in pegasus.simulator.logic.people_manager)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager"]], "person (class in pegasus.simulator.logic.people.person)": [[14, "pegasus.simulator.logic.people.person.Person"]], "personcontroller (class in pegasus.simulator.logic.people.person_controller)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController"]], "__del__() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.__del__"]], "__init__() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.__init__"]], "__init__() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.__init__"]], "__init__() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.__init__"]], "__new__() (pegasus.simulator.logic.people_manager.peoplemanager static method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.__new__"]], "add_animation_graph_to_agent() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.add_animation_graph_to_agent"]], "add_person() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.add_person"]], "assets_root_path (pegasus.simulator.logic.people.person.person attribute)": [[14, "pegasus.simulator.logic.people.person.Person.assets_root_path"]], "character_root_prim_path (pegasus.simulator.logic.people.person.person attribute)": [[14, "pegasus.simulator.logic.people.person.Person.character_root_prim_path"]], "get_character_asset_list() (pegasus.simulator.logic.people.person.person static method)": [[14, "pegasus.simulator.logic.people.person.Person.get_character_asset_list"]], "get_path_for_character_prim() (pegasus.simulator.logic.people.person.person static method)": [[14, "pegasus.simulator.logic.people.person.Person.get_path_for_character_prim"]], "get_people_manager() (pegasus.simulator.logic.people_manager.peoplemanager static method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.get_people_manager"]], "get_person() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.get_person"]], "get_usd_in_folder() (pegasus.simulator.logic.people.person.person static method)": [[14, "pegasus.simulator.logic.people.person.Person.get_usd_in_folder"]], "initialize() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.initialize"]], "pegasus.simulator.logic.people.person": [[14, "module-pegasus.simulator.logic.people.person"]], "pegasus.simulator.logic.people.person_controller": [[14, "module-pegasus.simulator.logic.people.person_controller"]], "pegasus.simulator.logic.people_manager": [[14, "module-pegasus.simulator.logic.people_manager"]], "people (pegasus.simulator.logic.people_manager.peoplemanager property)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.people"]], "person (pegasus.simulator.logic.people.person_controller.personcontroller property)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.person"]], "rebuild_nav_mesh() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.rebuild_nav_mesh"]], "remove_all_people() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.remove_all_people"]], "remove_person() (pegasus.simulator.logic.people_manager.peoplemanager method)": [[14, "pegasus.simulator.logic.people_manager.PeopleManager.remove_person"]], "reset() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.reset"]], "sim_start_stop() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.sim_start_stop"]], "spawn_agent() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.spawn_agent"]], "start() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.start"]], "start() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.start"]], "state (pegasus.simulator.logic.people.person.person property)": [[14, "pegasus.simulator.logic.people.person.Person.state"]], "stop() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.stop"]], "stop() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.stop"]], "update() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.update"]], "update() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.update"]], "update_state() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.update_state"]], "update_state() (pegasus.simulator.logic.people.person_controller.personcontroller method)": [[14, "pegasus.simulator.logic.people.person_controller.PersonController.update_state"]], "update_target_position() (pegasus.simulator.logic.people.person.person method)": [[14, "pegasus.simulator.logic.people.person.Person.update_target_position"]], "barometer (class in pegasus.simulator.logic.sensors.barometer)": [[15, "pegasus.simulator.logic.sensors.barometer.Barometer"]], "__init__() (pegasus.simulator.logic.sensors.barometer.barometer method)": [[15, "pegasus.simulator.logic.sensors.barometer.Barometer.__init__"]], "pegasus.simulator.logic.sensors.barometer": [[15, "module-pegasus.simulator.logic.sensors.barometer"]], "state (pegasus.simulator.logic.sensors.barometer.barometer property)": [[15, "pegasus.simulator.logic.sensors.barometer.Barometer.state"]], "update() (pegasus.simulator.logic.sensors.barometer.barometer method)": [[15, "pegasus.simulator.logic.sensors.barometer.Barometer.update"]], "gps (class in pegasus.simulator.logic.sensors.gps)": [[16, "pegasus.simulator.logic.sensors.gps.GPS"]], "__init__() (pegasus.simulator.logic.sensors.gps.gps method)": [[16, "pegasus.simulator.logic.sensors.gps.GPS.__init__"]], "pegasus.simulator.logic.sensors.gps": [[16, "module-pegasus.simulator.logic.sensors.gps"]], "state (pegasus.simulator.logic.sensors.gps.gps property)": [[16, "pegasus.simulator.logic.sensors.gps.GPS.state"]], "update() (pegasus.simulator.logic.sensors.gps.gps method)": [[16, "pegasus.simulator.logic.sensors.gps.GPS.update"]], "imu (class in pegasus.simulator.logic.sensors.imu)": [[17, "pegasus.simulator.logic.sensors.imu.IMU"]], "__init__() (pegasus.simulator.logic.sensors.imu.imu method)": [[17, "pegasus.simulator.logic.sensors.imu.IMU.__init__"]], "pegasus.simulator.logic.sensors.imu": [[17, "module-pegasus.simulator.logic.sensors.imu"]], "state (pegasus.simulator.logic.sensors.imu.imu property)": [[17, "pegasus.simulator.logic.sensors.imu.IMU.state"]], "update() (pegasus.simulator.logic.sensors.imu.imu method)": [[17, "pegasus.simulator.logic.sensors.imu.IMU.update"]], "magnetometer (class in pegasus.simulator.logic.sensors.magnetometer)": [[18, "pegasus.simulator.logic.sensors.magnetometer.Magnetometer"]], "__init__() (pegasus.simulator.logic.sensors.magnetometer.magnetometer method)": [[18, "pegasus.simulator.logic.sensors.magnetometer.Magnetometer.__init__"]], "pegasus.simulator.logic.sensors.magnetometer": [[18, "module-pegasus.simulator.logic.sensors.magnetometer"]], "state (pegasus.simulator.logic.sensors.magnetometer.magnetometer property)": [[18, "pegasus.simulator.logic.sensors.magnetometer.Magnetometer.state"]], "update() (pegasus.simulator.logic.sensors.magnetometer.magnetometer method)": [[18, "pegasus.simulator.logic.sensors.magnetometer.Magnetometer.update"]], "sensor (class in pegasus.simulator.logic.sensors.sensor)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor"]], "__init__() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.__init__"]], "config_from_dict() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.config_from_dict"]], "initialize() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.initialize"]], "origin_alt (pegasus.simulator.logic.sensors.sensor.sensor attribute)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.origin_alt"]], "origin_lat (pegasus.simulator.logic.sensors.sensor.sensor attribute)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.origin_lat"]], "origin_lon (pegasus.simulator.logic.sensors.sensor.sensor attribute)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.origin_lon"]], "pegasus.simulator.logic.sensors.sensor": [[19, "module-pegasus.simulator.logic.sensors.sensor"]], "reset() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.reset"]], "sensor_type (pegasus.simulator.logic.sensors.sensor.sensor property)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.sensor_type"]], "set_update_rate() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.set_update_rate"]], "start() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.start"]], "state (pegasus.simulator.logic.sensors.sensor.sensor property)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.state"]], "stop() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.stop"]], "update() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.update"]], "update_at_rate() (pegasus.simulator.logic.sensors.sensor.sensor method)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.update_at_rate"]], "update_period (pegasus.simulator.logic.sensors.sensor.sensor attribute)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.update_period"]], "update_rate (pegasus.simulator.logic.sensors.sensor.sensor property)": [[19, "pegasus.simulator.logic.sensors.sensor.Sensor.update_rate"]], "state (class in pegasus.simulator.logic.state)": [[20, "pegasus.simulator.logic.state.State"]], "__init__() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.__init__"]], "get_angular_velocity_frd() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.get_angular_velocity_frd"]], "get_attitude_ned_frd() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.get_attitude_ned_frd"]], "get_linear_acceleration_ned() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.get_linear_acceleration_ned"]], "get_linear_body_velocity_ned_frd() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.get_linear_body_velocity_ned_frd"]], "get_linear_velocity_ned() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.get_linear_velocity_ned"]], "get_position_ned() (pegasus.simulator.logic.state.state method)": [[20, "pegasus.simulator.logic.state.State.get_position_ned"]], "pegasus.simulator.logic.state": [[20, "module-pegasus.simulator.logic.state"]], "quadraticthrustcurve (class in pegasus.simulator.logic.thrusters.quadratic_thrust_curve)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve"]], "__init__() (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve method)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.__init__"]], "force (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve property)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.force"]], "pegasus.simulator.logic.thrusters.quadratic_thrust_curve": [[21, "module-pegasus.simulator.logic.thrusters.quadratic_thrust_curve"]], "rolling_moment (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve property)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.rolling_moment"]], "rot_dir (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve property)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.rot_dir"]], "set_input_reference() (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve method)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.set_input_reference"]], "update() (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve method)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.update"]], "velocity (pegasus.simulator.logic.thrusters.quadratic_thrust_curve.quadraticthrustcurve property)": [[21, "pegasus.simulator.logic.thrusters.quadratic_thrust_curve.QuadraticThrustCurve.velocity"]], "multirotor (class in pegasus.simulator.logic.vehicles.multirotor)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor"]], "multirotorconfig (class in pegasus.simulator.logic.vehicles.multirotor)": [[22, "pegasus.simulator.logic.vehicles.multirotor.MultirotorConfig"]], "__init__() (pegasus.simulator.logic.vehicles.multirotor.multirotor method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor.__init__"]], "__init__() (pegasus.simulator.logic.vehicles.multirotor.multirotorconfig method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.MultirotorConfig.__init__"]], "force_and_torques_to_velocities() (pegasus.simulator.logic.vehicles.multirotor.multirotor method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor.force_and_torques_to_velocities"]], "handle_propeller_visual() (pegasus.simulator.logic.vehicles.multirotor.multirotor method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor.handle_propeller_visual"]], "pegasus.simulator.logic.vehicles.multirotor": [[22, "module-pegasus.simulator.logic.vehicles.multirotor"]], "start() (pegasus.simulator.logic.vehicles.multirotor.multirotor method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor.start"]], "stop() (pegasus.simulator.logic.vehicles.multirotor.multirotor method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor.stop"]], "update() (pegasus.simulator.logic.vehicles.multirotor.multirotor method)": [[22, "pegasus.simulator.logic.vehicles.multirotor.Multirotor.update"]], "vehicle (class in pegasus.simulator.logic.vehicles.vehicle)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle"]], "__del__() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.__del__"]], "__init__() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.__init__"]], "apply_force() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.apply_force"]], "apply_torque() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.apply_torque"]], "get_dc_interface() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.get_dc_interface"]], "get_world_transform_xform() (in module pegasus.simulator.logic.vehicles.vehicle)": [[23, "pegasus.simulator.logic.vehicles.vehicle.get_world_transform_xform"]], "pegasus.simulator.logic.vehicles.vehicle": [[23, "module-pegasus.simulator.logic.vehicles.vehicle"]], "sim_start_stop() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.sim_start_stop"]], "start() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.start"]], "state (pegasus.simulator.logic.vehicles.vehicle.vehicle property)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.state"]], "stop() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.stop"]], "update() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.update"]], "update_graphical_sensors() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.update_graphical_sensors"]], "update_sensors() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.update_sensors"]], "update_sim_state() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.update_sim_state"]], "update_state() (pegasus.simulator.logic.vehicles.vehicle.vehicle method)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.update_state"]], "vehicle_name (pegasus.simulator.logic.vehicles.vehicle.vehicle property)": [[23, "pegasus.simulator.logic.vehicles.vehicle.Vehicle.vehicle_name"]], "vehiclemanager (class in pegasus.simulator.logic.vehicle_manager)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager"]], "__del__() (pegasus.simulator.logic.vehicle_manager.vehiclemanager method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.__del__"]], "__init__() (pegasus.simulator.logic.vehicle_manager.vehiclemanager method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.__init__"]], "__new__() (pegasus.simulator.logic.vehicle_manager.vehiclemanager static method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.__new__"]], "add_vehicle() (pegasus.simulator.logic.vehicle_manager.vehiclemanager method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.add_vehicle"]], "get_vehicle() (pegasus.simulator.logic.vehicle_manager.vehiclemanager method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.get_vehicle"]], "get_vehicle_manager() (pegasus.simulator.logic.vehicle_manager.vehiclemanager static method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.get_vehicle_manager"]], "pegasus.simulator.logic.vehicle_manager": [[24, "module-pegasus.simulator.logic.vehicle_manager"]], "remove_all_vehicles() (pegasus.simulator.logic.vehicle_manager.vehiclemanager method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.remove_all_vehicles"]], "remove_vehicle() (pegasus.simulator.logic.vehicle_manager.vehiclemanager method)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.remove_vehicle"]], "vehicles (pegasus.simulator.logic.vehicle_manager.vehiclemanager property)": [[24, "pegasus.simulator.logic.vehicle_manager.VehicleManager.vehicles"]]}})